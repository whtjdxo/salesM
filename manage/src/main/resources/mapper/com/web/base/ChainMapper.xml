<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.manage.base.mapper.ChainMapper">
    <select id="getQueryTotalCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>    

    <select id="getCeoIdDupChk" parameterType="java.util.HashMap" resultType="int">
        SELECT  COUNT(1)
          FROM  tb_user
         WHERE  user_id = #{user_id}
    </select>


    <select id="getNewChainNo" resultType="java.lang.String">
	    /* ChainMapper.getNewChainNo */
		SELECT GET_JOB_SEQ('TB_CHAIN', 'CHAIN_NO')
	</select>
    
    <select id="getChainList" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT 	TC.CHAIN_NO         AS  chain_no
                , TC.CHAIN_NM       AS  chain_nm
                , IFNULL(TC.CORP_CD, '')        AS  corp_cd
                , IFNULL(CO.CORP_NM, '')        AS  corp_nm
                , IFNULL(TC.AGENCY_NO, '')      AS  agency_no
                , IFNULL(AG.AGENCY_NM, '')      AS  agency_nm
                , IFNULL(TC.BIZ_NO, '')         AS  biz_no
                , IFNULL(TC.LAW_NO, '')         AS  law_no
                , IFNULL(TC.UPTAE, '')          AS  uptae
                , IFNULL(TC.UPJONG, '')         AS  upjong
                , IFNULL(TC.CHAIN_TEL_NO, '')   AS  chain_tel_no
                , IFNULL(TC.CHAIN_ZIP_NO, '')   AS  chain_zip_no
                , IFNULL(TC.CHAIN_ADDR, '')     AS  chain_addr
                , IFNULL(TC.CHAIN_ADDR_DTL, '') AS  chain_addr_dtl
                , IFNULL(TC.CEO_ID, '')         AS  ceo_id
                , IFNULL(TU.USER_NM, '')        AS  ceo_nm
                , IFNULL(TC.CEO_BIRTH_DT, '')   AS  ceo_birth_dt
                , IFNULL(TC.CEO_REG_SEX, '')    AS  ceo_reg_sex
                , IFNULL(TC.CEO_REG_NO, '')     AS  ceo_reg_no
                , IFNULL(TU.TEL_NO, '')         AS  ceo_tel_no
                , IFNULL(TU.ZIP_NO, '')         AS  ceo_zip_no
                , IFNULL(TU.ADDR, '')           AS  ceo_addr
                , IFNULL(TU.ADDR_DTL, '')       AS  ceo_addr_dtl
                , IFNULL(TC.EMAIL, '')          AS  email
                , IFNULL(TC.ABANK_ACCOUNT_TP, '')   AS  abank_account_tp
                , IFNULL(TC.ABANK_CD, '')           AS  abank_cd
                , IFNULL(TC.ABANK_ACCOUNT, '')      AS  abank_account
                , IFNULL(TC.ABANK_ACCOUNT_NO, '')   AS  abank_account_no
                , IFNULL(TC.ABANK_SPEED_YN, '')     AS  abank_speed_yn
                , IFNULL(TC.ABANK_PWD, '')          AS  abank_pwd
                , IFNULL(TC.ABANK_DEPOSITOR, '')    AS  abank_depositor
                , IFNULL(TC.ABANK_CHECK_YN, '')     AS  abank_check_yn
                , IFNULL(TC.ABANK_CHECK_ID, '')     AS  abank_check_id
                , IFNULL(TC.ABANK_CHECK_DT, '')     AS  abank_check_dt
                , IFNULL(TC.ABANK_LINK_STAT, '')    AS  abank_link_stat
                , IFNULL(TC.ABANK_LINK_AGREE_DT, '') AS abank_link_agree_dt
                , IFNULL(TC.ABANK_LINK_PAYER_NO, '') AS abank_link_payer_no
                , IFNULL(TC.ABANK_LAST_REMIT_DTTM, '') AS abank_last_remit_dttm
                , IFNULL(TC.ABANK_SEARCH_ID, '')    AS abank_search_id
                , IFNULL(TC.ABANK_SEARCH_PWD, '')   AS abank_search_pwd
                , IFNULL(TC.BBANK_CD, '')           AS  bbank_cd
                , IFNULL(TC.BBANK_ACCOUNT_NO, '')   AS  bbank_account_no
                , IFNULL(TC.BBANK_DEPOSITOR, '')    AS  bbank_depositor
                , IFNULL(TC.BBANK_CHECK_YN, '')     AS  bbank_check_yn
                , IFNULL(TC.BBANK_CHECK_ID, '')     AS  bbank_check_id
                , IFNULL(TC.BBANK_CHECK_DT, '')     AS  bbank_check_dt
                , IFNULL(TC.AUTO_REMIT_YN, '')      AS  auto_remit_yn
                , IFNULL(TC.SVC_STAT, '')           AS  svc_stat
                , GET_CODE_NM('SVC_STAT', TC.SVC_STAT)       AS svc_stat_nm
                , IFNULL(TC.CONT_DT, '')            AS  cont_dt
                , IFNULL(TC.SVC_START_DT, '')       AS  svc_start_dt
                , IFNULL(TC.SVC_END_DT, '')         AS  svc_end_dt
                , IFNULL(TC.CRD_RATE, 0)           AS  crd_rate
                , IFNULL(TC.CRD_DELAY_RATE, 0)     AS  crd_delay_rate
                , IFNULL(TC.SVC_RATE, 0)           AS  svc_rate
                , IFNULL(TC.ETC_RATE, 0)           AS  etc_rate
                , IFNULL(TC.TOT_LIMIT_AMT, 0)      AS  tot_limit_amt
                , IFNULL(TC.UNIT_LIMIT_AMT, 0)     AS  unit_limit_amt
                , IFNULL(TC.DAY_USE_RATE, 0)       AS  day_use_rate
                , IFNULL(TC.DAY_USE_AMT, 0)        AS  day_use_amt
                , IFNULL(TC.TOT_USE_AMT, 0)        AS  tot_use_amt
                , IFNULL(TC.COLLECT_TYPE, '')       AS  collect_type
                , IFNULL(TC.COLLECT_TRANS, '')      AS  collect_trans
                , IFNULL(TC.REMIT_TYPE, '')         AS  remit_type
                , IFNULL(TC.REMIT_CYCLE, '')        AS  remit_cycle
                , IFNULL(TC.REMIT_STAT, '')        AS  remit_stat
                , GET_CODE_NM('REMIT_STAT', TC.REMIT_STAT)       AS remit_stat_nm
                , IFNULL(TC.REMIT_STAT_CD, '')      AS  remit_stat_cd
                , IFNULL(TC.REMIT_STAT_DATE, '')    AS remit_stat_date
                , IFNULL(TC.REMIT_OVER_STAT, '')    AS remit_over_stat
                , IFNULL(TC.REMIT_AUTO_STAT, '')    AS remit_auto_stat
                , IFNULL(TC.REMIT_TRANS_FEE, '')    AS remit_trans_fee
                , IFNULL(TC.REMIT_START_DT, '')     AS remit_start_dt
                , IFNULL(TC.REMIT_END_DT, '')       AS remit_end_dt
                , IFNULL(TC.RISK_STAT, '')          AS risk_stat
                , IFNULL(RISK_REASON_CD, '')        AS risk_reason_cd
                , IFNULL(TC.REMARK, '')             AS remark
                , IFNULL(TC.BK_DIV, '')             AS bk_div
                , IFNULL(TC.CARDSALES_ID, '')       AS cardsales_id
                , IFNULL(TC.CARDSALES_PWD, '')      AS cardsales_pwd
                , TC.WORK_CHECK_FLAG    AS work_check_flag
                , TC.WORK_CHECK_MM      AS work_check_mm
                , TC.WORK_START_TM      AS work_start_tm
                , TC.WORK_END_TM        AS work_end_tm
                , TC.WORK_HOLIDAY_FLAG  AS work_holiday_flag
                , TC.LAST_CHECK_DTTM    AS last_check_dttm
                , IFNULL(TC.USE_YN, 'N')             AS use_yn
                , IFNULL(TC.UPT_USER_ID, TC.ENT_USER_ID) AS upt_user_id
                , DATE_FORMAT(IFNULL(TC.UPT_DTTM, TC.ENT_DTTM), '%Y-%m-%d %H:%i:%s') AS upt_dttm
          FROM  TB_CHAIN TC
          JOIN  TB_CORP  CO     ON CO.CORP_CD = TC.CORP_CD
          JOIN  TB_AGENCY AG    ON AG.AGENCY_NO  = TC.AGENCY_NO
          JOIN  TB_USER  TU     ON TU.USER_ID = TC.CEO_ID

        WHERE   1 = 1
        <if test="sch_corp_no != null and sch_corp_no != ''">			
			AND TC.CORP_NO = #{sch_corp_no}
		</if>
        <if test="sch_agency_no != null and sch_agency_no != ''">			
			AND TC.AGENCY_NO = #{sch_agency_no}
		</if>
        <if test="schgb_chain_val != ''">
			<choose>
				<when test="schgb_chain == 'schgb_chain_no'">
					AND TC.CHAIN_NO = #{schgb_chain_val}
				</when>
				<when test="schgb_chain == 'schgb_chain_nm'">
					AND TC.CHAIN_NM LIKE CONCAT('%', #{schgb_chain_val}, '%')
				</when>
			</choose>
		</if>
        <if test="sch_use_yn != null and sch_use_yn != ''">			
			AND TC.USE_YN = #{sch_use_yn}
		</if>
        <choose>
            <when test="sidx != ''">
                ORDER BY ${sidx} ${sord}
            </when>
            <otherwise>
                ORDER BY ent_dttm DESC
            </otherwise>
        </choose>
    </select> 

    <insert id="insertChain" parameterType="com.web.manage.base.domain.ChainVO">
        INSERT INTO tb_chain (
            CHAIN_NO        , CHAIN_NM          , CORP_CD           , AGENCY_NO
            , BIZ_NO        , LAW_NO            , UPTAE             , UPJONG
            , CHAIN_TEL_NO  , CHAIN_ZIP_NO      , CHAIN_ADDR        , CHAIN_ADDR_DTL
            , CEO_ID        , CEO_BIRTH_DT      , CEO_REG_NO        , EMAIL
            , REMARK                    
            , ENT_DTTM      , ENT_USER_ID
        ) VALUES (
            #{chain_no}         , #{chain_nm}       , #{corp_cd}        , #{agency_no}
            , #{biz_no}         , #{law_no}         , #{uptae}          , #{upjong}
            , #{chain_tel_no}   , #{chain_zip_no}   , #{chain_addr}     , #{chain_addr_dtl}
            , #{ceo_id}         , #{ceo_birth_dt}   , #{ceo_reg_no}     , #{email}
            , #{remark}
            , NOW()             , #{ent_user_id}
        ) 
    </insert>

    <update id="updateChain" parameterType="com.web.manage.base.domain.ChainVO">
        UPDATE tb_chain
           SET CHAIN_NM          = #{chain_nm}
               , CORP_CD           = #{corp_cd}
               , AGENCY_NO         = #{agency_no}
               , BIZ_NO            = #{biz_no}
               , LAW_NO            = #{law_no}
               , UPTAE             = #{uptae}
               , UPJONG            = #{upjong}
               , CHAIN_TEL_NO      = #{chain_tel_no}
               , CHAIN_ZIP_NO      = #{chain_zip_no}
               , CHAIN_ADDR        = #{chain_addr}
               , CHAIN_ADDR_DTL    = #{chain_addr_dtl}
               <!-- , CEO_ID            = #{ceo_id} -->
               , CEO_BIRTH_DT      = #{ceo_birth_dt}
               <!-- , CEO_REG_SEX       = #{ceo_reg_sex}
               , CEO_REG_NO        = #{ceo_reg_no} -->
               , EMAIL             = #{email}
               , REMARK            = #{remark}
               , UPT_USER_ID       = #{upt_user_id}
               , UPT_DTTM          = NOW()
         WHERE CHAIN_NO         = #{chain_no}
    </update>

    <update id="updateChainCont" parameterType="com.web.manage.base.domain.ChainVO">
        UPDATE  TB_CHAIN
           SET  ABANK_ACCOUNT_TP    = #{abank_account_tp}
                , ABANK_CD            = #{abank_cd}                
                , ABANK_ACCOUNT_NO    = #{abank_account_no}
                , ABANK_SPEED_YN      = 'Y' 
                , ABANK_PWD           = #{abank_pwd}
                , ABANK_DEPOSITOR     = #{abank_depositor}
                , ABANK_CHECK_YN      = #{abank_check_yn}
                , ABANK_CHECK_ID      = #{abank_check_id}
                , ABANK_CHECK_DT      = #{abank_check_dt}
                , ABANK_LINK_STAT     = #{abank_link_stat}
                , ABANK_LINK_AGREE_DT = #{abank_link_agree_dt}
                , ABANK_LINK_PAYER_NO = #{abank_link_payer_no}
                <!-- , ABANK_LAST_REMIT_DTTM = #{abank_last_remit_dttm} -->
                , ABANK_SEARCH_ID     = #{abank_search_id}
                , ABANK_SEARCH_PWD    = #{abank_search_pwd}
                , BBANK_CD            = #{bbank_cd}
                , BBANK_ACCOUNT_NO    = #{bbank_account_no}
                , BBANK_DEPOSITOR     = #{bbank_depositor}
                <!-- , BBANK_CHECK_YN      = #{bbank_check_yn}
                , BBANK_CHECK_ID      = #{bbank_check_id}
                , BBANK_CHECK_DT      = #{bbank_check_dt}
                , AUTO_REMIT_YN       = #{auto_remit_yn} -->
                , CONT_DT             = #{cont_dt}
                , SVC_STAT            = #{svc_stat}
                , SVC_START_DT        = #{svc_start_dt}
                , SVC_END_DT          = #{svc_end_dt}
                , CRD_RATE            = #{crd_rate}
                , CRD_DELAY_RATE      = #{crd_delay_rate}
                , SVC_RATE            = #{svc_rate}
                , ETC_RATE            = #{etc_rate}
                , TOT_LIMIT_AMT       = #{tot_limit_amt}
                , UNIT_LIMIT_AMT      = #{unit_limit_amt}
                , DAY_USE_RATE        = #{day_use_rate}
                , DAY_USE_AMT         = #{day_use_amt}
                , TOT_USE_AMT         = #{tot_use_amt}
                <!-- , REMIT_TYPE          = #{remit_type}
                , REMIT_CYCLE         = #{remit_cycle} -->
                , REMIT_STAT          = #{remit_stat}
                , REMIT_STAT_CD       = #{remit_stat_cd}
                <!-- , REMIT_STAT_DATE     = #{remit_stat_date} -->
                , REMIT_OVER_STAT     = #{remit_over_stat}
                , REMIT_OVER_STAT_CD  = #{remit_over_stat_cd}
                <!-- , REMIT_AUTO_STAT     = #{remit_auto_stat} -->
                , REMIT_TRANS_FEE     = #{remit_trans_fee}
                , REMIT_START_DT      = #{remit_start_dt}
                , REMIT_END_DT        = #{remit_end_dt}
                , RISK_STAT           = #{risk_stat}
                , RISK_REASON_CD      = #{risk_reason_cd}                
                , CARDSALES_ID        = #{cardsales_id}
                , CARDSALES_PWD       = #{cardsales_pwd}
                <!-- , WORK_CHECK_FLAG     = #{work_check_flag}
                , WORK_CHECK_MM       = #{work_check_mm}
                , WORK_START_TM       = #{work_start_tm}
                , WORK_END_TM         = #{work_end_tm}
                , WORK_HOLIDAY_FLAG   = #{work_holiday_flag}
                , LAST_CHECK_DTTM     = #{last_check_dttm} --> 
                , USE_YN              = #{use_yn}
                , UPT_DTTM            = NOW()
                , UPT_USER_ID           = #{upt_user_id}
         WHERE  CHAIN_NO = #{cont_chain_no}                
    </update>   


    <select id="getChainVanList" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT CV.VAN_SEQ                               AS van_seq
                , CV.CHAIN_NO                           AS chain_no    
                , CV.VAN_CD                             AS van_cd
                , GET_CODE_NM('VAN_CD', CV.VAN_CD)      AS van_nm
                , CV.VAN_ID                             AS van_id
                , CV.VAN_PWD                            AS van_pwd
                , CV.TERM_ID                            AS term_id
                , IFNULL(CV.USE_YN, 'N')                AS use_yn
                , IFNULL(CV.UPT_USER_ID, CV.ENT_USER_ID) AS upt_user_id
                , DATE_FORMAT(IFNULL(CV.UPT_DTTM, CV.ENT_DTTM), '%Y-%m-%d %H:%i:%s') AS upt_dttm
          FROM	TB_CHAIN_VAN CV 
        WHERE   CHAIN_NO = #{van_chain_no}
        <if test="sch_van_cd != null and sch_van_cd != ''">			
			AND CV.VAN_CD = #{sch_van_cd}
		</if>
        <choose>
            <when test="sidx != ''">
                ORDER BY ${sidx} ${sord}
            </when>
            <otherwise>
                ORDER BY ent_dttm DESC
            </otherwise>
        </choose>
    </select>
    
    
    <select id="getVanIdDupChk" parameterType="java.util.HashMap" resultType="int">
        SELECT  COUNT(1)
          FROM  TB_CHAIN_VAN
         WHERE  CHAIN_NO = #{chain_no}
           AND  VAN_CD  = #{van_cd}
           AND  VAN_ID  = #{van_id}
    </select>

    <insert id="insertChainVan" parameterType="com.web.manage.base.domain.ChainVanVO">
        INSERT INTO TB_CHAIN_VAN (
            CHAIN_NO        , VAN_CD          , VAN_ID           , VAN_PWD
            , TERM_ID       , USE_YN    
            , ENT_DTTM      , ENT_USER_ID
        ) VALUES (
            #{van_chain_no} , #{van_cd}       , #{van_id}        , #{van_pwd}
            , #{term_id}    , #{van_use_yn}
            , NOW()         , #{ent_user_id}
        ) 
    </insert>

    <update id="updateChainVan" parameterType="com.web.manage.base.domain.ChainVanVO">
        UPDATE TB_CHAIN_VAN
           SET  TERM_ID         = #{term_id}
                , VAN_CD        = #{van_cd}  
                , VAN_ID        = #{van_id}      
                , VAN_PWD       = #{van_pwd}
                , USE_YN        = #{van_use_yn}
                , UPT_USER_ID   = #{upt_user_id}
                , UPT_DTTM      = NOW()
         WHERE  VAN_SEQ = #{van_seq}           
    </update> 

     <select id="getChainCardList" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT CC.CARD_SEQ							    AS card_seq
                , CC.CHAIN_NO						    AS chain_no
                , CC.CARD_ACQ						    AS card_acq
                , GET_CODE_NM('CARD_ACQ', CC.CARD_ACQ) 	AS card_acq_nm
                , CC.CARD_REG_NO						AS card_reg_no
                , IFNULL(CC.CARD_RATE, 0)				AS card_rate
                , IFNULL(CC.CHECK_RATE, 0)				AS check_rate
                , IFNULL(CC.ABROAD_RATE, 0)				AS abroad_rate
                , IFNULL(CC.CARD_IN_CYCLE, 0)			AS card_in_cycle
                , CC.CARD_MEMO							AS card_memo
                , CC.DEPO_CHK							AS depo_chk
                , CC.USE_YN 							AS use_yn
                , IFNULL(CC.UPT_USER_ID, CC.ENT_USER_ID) AS upt_user_id
                , DATE_FORMAT(IFNULL(CC.UPT_DTTM, CC.ENT_DTTM), '%Y-%m-%d %H:%i:%s') AS upt_dttm
          FROM	TB_CHAIN_CARD CC 
         WHERE  CHAIN_NO = #{card_chain_no}
        <if test="sch_card_acq != null and sch_card_acq != ''">			
			AND CC.CARD_ACQ = #{sch_card_cd}
		</if>
        <choose>
            <when test="sidx != ''">
                ORDER BY ${sidx} ${sord}
            </when>
            <otherwise>
                ORDER BY ent_dttm DESC
            </otherwise>
        </choose>
    </select>
    
    
    <select id="getCardDupChk" parameterType="java.util.HashMap" resultType="int">
        SELECT  COUNT(1)
          FROM  TB_CHAIN_CARD
         WHERE  CHAIN_NO    = #{card_chain_no}
           AND  CARD_CD     = #{card_cd}
           AND  CARD_REG_NO = #{card_reg_no}
    </select>

    <insert id="insertChainCard" parameterType="com.web.manage.base.domain.ChainCardVO">
        INSERT INTO TB_CHAIN_CARD (
            CHAIN_NO        , CARD_ACQ          , CARD_REG_NO           
            , CARD_RATE     , CHECK_RATE        , ABROAD_RATE       , CARD_IN_CYCLE
            , DEPO_CHK      , USE_YN            , CARD_MEMO
            , ENT_DTTM      , ENT_USER_ID
        ) VALUES (
            #{card_chain_no} , #{card_acq}       , #{card_reg_no}
            , #{card_rate}   , #{check_rate}     , #{abroad_rate}    , #{card_in_cycle}
            , #{depo_chk}    , #{card_use_yn}    , #{card_memo}
            , NOW()          , #{ent_user_id}
        ) 
    </insert>

    <update id="updateChainCard" parameterType="com.web.manage.base.domain.ChainCardVO">
        UPDATE  TB_CHAIN_CARD
           SET  CARD_ACQ          = #{card_acq}
                , CARD_REG_NO     = #{card_reg_no}
                , CARD_RATE       = #{card_rate}
                , CHECK_RATE      = #{check_rate}
                , ABROAD_RATE     = #{abroad_rate}
                , CARD_IN_CYCLE   = #{card_in_cycle}
                , DEPO_CHK        = #{depo_chk}
                , USE_YN          = #{card_use_yn}
                , CARD_MEMO       = #{card_memo}
                , UPT_USER_ID     = #{upt_user_id}
                , UPT_DTTM        = NOW()
         WHERE  CARD_SEQ = #{card_seq}           
    </update>

    <select id="getNewFileNo" resultType="java.lang.String">
	    /* ChainMapper.getNewFileNo */
		SELECT GET_JOB_SEQ('TB_CHAIN_FILE', 'FILE_SEQ')
	</select>

    <select id="getChainFileList" parameterType="java.util.HashMap" resultType="hashMap">
        SELECT  CC.file_seq							        AS file_seq
                , CC.chain_no						        AS chain_no
                , CC.file_gb						        AS file_gb
                , GET_CODE_NM('FILE_GB', CC.file_gb) 	    AS file_gb_nm
                , CC.file_nm						        AS file_nm
                , CC.file_path						        AS file_path
                , CC.ORIGIN_FILE_NM					        AS origin_file_nm
                , CC.FILE_SIZE                              as file_size
                , CC.FILE_EXT                               AS file_ext
                , CC.file_icon_tp					        AS file_icon_tp
                , IFNULL(CC.upt_user_id, CC.ent_user_id)    AS upt_user_id
                , DATE_FORMAT(IFNULL(CC.upt_dttm, CC.ent_dttm), '%Y-%m-%d %H:%i:%s') AS upt_dttm
          FROM	TB_CHAIN_FILE CC 
         WHERE  CHAIN_NO = #{file_chain_no}
           AND  CC.USE_YN = 'Y'
        <if test="sch_file_gb != null and sch_file_gb != ''">			
			AND CC.FILE_GB = #{sch_file_gb}
		</if>
        <choose>
            <when test="sidx != ''">
                ORDER BY ${sidx} ${sord}
            </when>
            <otherwise>
                ORDER BY ent_dttm DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insertChainFile" parameterType="com.web.manage.base.domain.ChainFileVO">
        INSERT INTO TB_CHAIN_FILE (
            FILE_SEQ        , CHAIN_NO          , FILE_GB           , FILE_NM      
            , FILE_PATH     , ORIGIN_FILE_NM   
            , FILE_SIZE     , FILE_EXT          , FILE_ICON_TP   
            , ENT_DTTM      , ENT_USER_ID
        ) VALUES (
            #{file_seq}     , #{file_chain_no}  , #{file_gb}        , #{file_nm}
            , #{file_path}  , #{origin_file_nm}  
            , #{file_size}  , #{file_ext}       , #{file_icon_tp}
            , NOW()         , #{ent_user_id}
        )  
    </insert>

    <update id="updateChainFile" parameterType="com.web.manage.base.domain.ChainFileVO">
        UPDATE  TB_CHAIN_FILE
           SET  FILE_GB           = #{file_gb}
                , FILE_NM           = #{file_nm}
                , FILE_PATH         = #{file_path}
                , ORIGIN_FILE_NM    = #{origin_file_nm}
                , FILE_SIZE         = #{file_size}
                , FILE_EXT          = #{file_ext}
                , FILE_ICON_TP      = #{file_icon_tp}
                , UPT_USER_ID       = #{upt_user_id}
                , UPT_DTTM          = NOW()
         WHERE  FILE_SEQ = #{file_seq}           
    </update>

    <update id="deleteChainFile" parameterType="com.web.manage.base.domain.ChainFileVO">
        UPDATE  TB_CHAIN_FILE
           SET  USE_YN = 'N'         
                , UPT_USER_ID       = #{upt_user_id}
                , UPT_DTTM          = NOW()
         WHERE  FILE_SEQ = #{file_seq}           
    </update>
</mapper>
