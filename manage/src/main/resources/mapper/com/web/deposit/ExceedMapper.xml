<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.manage.deposit.mapper.ExceedMapper">
    <select id="getQueryTotalCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select> 
	
    <select id="getExcSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT 	SQL_CALC_FOUND_ROWS
		 		EM.CHAIN_NO				AS chain_no
				, TC.CHAIN_NM			AS chain_nm
				, TC.BIZ_NO 			AS biz_no
				, IFNULL(MIN(EXC_DATE), '') 	AS min_exc_date
				, IFNULL(MAX(EXC_DATE), '') 	AS max_exc_date
				, IFNULL(SUM(OCCUR_AMT), 0) 	AS occur_amt 
				, IFNULL(SUM(ISSUE_AMT), 0) 	AS issue_amt
				, IFNULL(SUM(REMAIN_AMT), 0) 	AS remain_amt
		FROM 	TB_EXCEED_MST EM
				JOIN TB_CHAIN TC ON TC.CHAIN_NO = EM.CHAIN_NO 
								AND TC.USE_YN = 'Y'
				<if test='sch_corp_cd != null and sch_corp_cd != ""'>
					AND  TC.CORP_CD = #{sch_corp_cd}
				</if>
				<if test='sch_chain_nm != null and sch_chain_nm != ""'>
					AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
				</if>				 
		 WHERE 	1= 1
		<if test='sch_all == null'>
		   AND  EM.EXC_STATUS IN ('100000', '000000')
		   AND 	EM.REMAIN_AMT  &gt; 0
		</if>			
		   AND	EM.USE_YN	= 'Y'
		 GROUP 	BY   EM.CHAIN_NO, TC.CHAIN_NM, TC.BIZ_NO 
        <choose>
			<when test="sidx != '' and sidx != null ">
					ORDER BY ${sidx} ${sord}
			</when>
			<otherwise>
					ORDER BY 1
			</otherwise>
        </choose>                
        LIMIT  ${start}, ${end}
	</select>

	<select id="getExcSummTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT 	SQL_CALC_FOUND_ROWS
				  IFNULL(SUM(OCCUR_AMT), 0) 	AS occur_amt 
				, IFNULL(SUM(ISSUE_AMT), 0) 	AS issue_amt
				, IFNULL(SUM(REMAIN_AMT), 0) 	AS remain_amt
		FROM 	TB_EXCEED_MST EM
				JOIN TB_CHAIN TC ON TC.CHAIN_NO = EM.CHAIN_NO 
								AND TC.USE_YN = 'Y'
				<if test='sch_corp_cd != null and sch_corp_cd != ""'>
					AND  TC.CORP_CD = #{sch_corp_cd}
				</if>
				<if test='sch_chain_nm != null and sch_chain_nm != ""'>
					AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
				</if>				 
		WHERE 	1= 1
		<if test='sch_all == null'>
		   AND  EM.EXC_STATUS IN ('100000', '000000')
		   AND 	EM.REMAIN_AMT  &gt; 0
		</if>
		AND	EM.USE_YN	= 'Y' 
	</select>

	<select id="getChainExcList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	SQL_CALC_FOUND_ROWS
				EM.EXC_NO									AS exc_no
				, EM.CHAIN_NO 								AS chain_no
				, EM.EXC_TYPE								AS exc_type
				, GET_CODE_NM('EXC_TYPE', EM.EXC_TYPE)  	AS exc_type_nm
				, EM.EXC_CODE								AS exc_code
				, GET_CODE_NM('EXC_CODE', EM.EXC_CODE)  	AS exc_code_nm
				, EM.EXC_STATUS 							AS exc_status
				, GET_CODE_NM('EXC_STATUS', EM.EXC_STATUS)  AS exc_status_nm
				, EM.EXC_DATE								AS exc_date
				, IFNULL(RM.REMIT_DT, '')					AS remit_dt
				, IFNULL(OCCUR_AMT, 0) 						AS occur_amt 
				, IFNULL(ISSUE_AMT, 0) 						AS issue_amt
				, IFNULL(REMAIN_AMT, 0) 					AS remain_amt 
				, EM.EXC_MEMO								AS exc_memo
				, EM.USE_YN 								AS use_yn
				, DATE_FORMAT(IFNULL(EM.UPT_DTTM, EM.ENT_DTTM), '%Y-%m-%d %H:%i:%s')	AS upt_dttm 
				, IFNULL(EM.UPT_USER_ID, EM.ENT_USER_ID)	AS upt_user_id
		  FROM 	TB_EXCEED_MST EM
				LEFT OUTER JOIN TB_REMIT_MST RM ON RM.REMIT_NO = EM.REMIT_NO  		
		 WHERE 	EM.CHAIN_NO = #{sch_chain_no} 
		   AND  EM.EXC_DATE BETWEEN #{sch_exc_sdt} 
		  						AND #{sch_exc_edt} 
		  AND  EM.USE_YN = 'Y'		
		<if test="sch_exc_type != null and sch_exc_type != ''"> 
			AND  EM.EXC_TYPE = #{sch_exc_type}  
		</if>
		<if test="sch_exc_code != null and sch_exc_code != ''"> 
			AND  EM.EXC_CODE = #{sch_exc_code}  
		</if>
		<if test="sch_status != null and sch_status != ''"> 
			AND  EM.EXC_STATUS = #{sch_status}  
		</if>
		
		<choose>
			<when test="sidx != '' and sidx != null ">
					ORDER BY ${sidx} ${sord}
			</when>
			<otherwise>
					ORDER BY 1
			</otherwise>
		</choose>                
		LIMIT  ${start}, ${end}
	</select>

	<select id="getChainExcListTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	SQL_CALC_FOUND_ROWS
				IFNULL(SUM(OCCUR_AMT), 0) 		AS occur_amt 
				, IFNULL(SUM(ISSUE_AMT), 0) 	AS issue_amt
				, IFNULL(SUM(REMAIN_AMT), 0) 	AS remain_amt 				
		  FROM 	TB_EXCEED_MST EM
				LEFT OUTER JOIN TB_REMIT_MST RM ON RM.REMIT_NO = EM.REMIT_NO  		
		 WHERE 	EM.CHAIN_NO = #{sch_chain_no} 
		   AND  EM.EXC_DATE BETWEEN #{sch_exc_sdt} 
		  						AND #{sch_exc_edt} 
		  AND  EM.USE_YN = 'Y'
		<if test="sch_exc_type != null and sch_exc_type != ''"> 
			AND  EM.EXC_TYPE = #{sch_exc_type}  
		</if>
		<if test="sch_exc_code != null and sch_exc_code != ''"> 
			AND  EM.EXC_CODE = #{sch_exc_code}  
		</if>
		<if test="sch_status != null and sch_status != ''"> 
			AND  EM.EXC_STATUS = #{sch_status}  
		</if>
		 
	</select>

	<select id="getChainExcResvList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	SQL_CALC_FOUND_ROWS
				EM.EXC_NO									AS exc_no
				, EM.CHAIN_NO 								AS chain_no
				, EM.EXC_TYPE								AS exc_type
				, GET_CODE_NM('EXC_TYPE', EM.EXC_TYPE)  	AS exc_type_nm
				, EM.EXC_CODE								AS exc_code
				, GET_CODE_NM('EXC_CODE', EM.EXC_CODE)  	AS exc_code_nm
				, EM.EXC_STATUS 							AS exc_status
				, GET_CODE_NM('EXC_STATUS', EM.EXC_STATUS)  AS exc_status_nm
				, EM.EXC_DATE								AS exc_date
				, IFNULL(RM.REMIT_DT, '')					AS remit_dt
				, IFNULL(OCCUR_AMT, 0) 						AS occur_amt 
				, IFNULL(ISSUE_AMT, 0) 						AS issue_amt
				, IFNULL(REMAIN_AMT, 0) 					AS remain_amt 
				, EM.EXC_MEMO								AS exc_memo
				, EM.USE_YN 								AS use_yn
				, DATE_FORMAT(IFNULL(EM.UPT_DTTM, EM.ENT_DTTM), '%Y-%m-%d %H:%i:%s')	AS upt_dttm 
				, IFNULL(EM.UPT_USER_ID, EM.ENT_USER_ID)	AS upt_user_id
		  FROM 	TB_EXCEED_MST EM
				LEFT OUTER JOIN TB_REMIT_MST RM ON RM.REMIT_NO = EM.REMIT_NO  		
		 WHERE 	EM.CHAIN_NO = #{sch_chain_no} 		
		   AND  EM.USE_YN = 'Y'
		   AND 	EM.EXC_STATUS = '100000'
		<choose>
			<when test="sidx != '' and sidx != null ">
					ORDER BY ${sidx} ${sord}
			</when>
			<otherwise>
					ORDER BY 1
			</otherwise>
		</choose>                
		LIMIT  ${start}, ${end}
	</select>

	<select id="getChainExcResvListTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 	SQL_CALC_FOUND_ROWS
				IFNULL(SUM(OCCUR_AMT), 0) 		AS occur_amt 
				, IFNULL(SUM(ISSUE_AMT), 0) 	AS issue_amt
				, IFNULL(SUM(REMAIN_AMT), 0) 	AS remain_amt 				
		  FROM 	TB_EXCEED_MST EM
				LEFT OUTER JOIN TB_REMIT_MST RM ON RM.REMIT_NO = EM.REMIT_NO  		
		 WHERE 	EM.CHAIN_NO = #{sch_chain_no} 
		   AND  EM.USE_YN = 'Y'
		   AND 	EM.EXC_STATUS = '100000'
	</select>

	<update id="callProcChangeResvDate" parameterType="com.web.manage.deposit.domain.ProcDepositVO" statementType="CALLABLE">
		{ 
				CALL PRC_DEPOSIT_CHANGE_RESV_DATE(
						#{wdNo, mode=IN, jdbcType=VARCHAR} 
						, #{changeResvDate, mode=IN, jdbcType=VARCHAR}
						, #{userId, mode=IN, jdbcType=VARCHAR}
						, #{resultCode, mode=OUT, jdbcType=INTEGER, javaType=java.lang.Integer}
						, #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
				) 
		}
	</update>
 	<select id="getNewChainNo" resultType="java.lang.String">
	    /* ChainMapper.getNewChainNo */
		SELECT GET_JOB_SEQ('TB_CHAIN', 'CHAIN_NO')
	</select>

	
    <insert id="insertExceedMst" parameterType="com.web.manage.deposit.domain.ExceedMstVO">
        INSERT INTO TB_EXCEED_MST (
            EXC_NO        		, CHAIN_NO       , EXC_TYPE       	, EXC_CODE		, CARD_ACQ
			, EXC_STATUS    	, EXC_DATE       , OCCUR_AMT      	, ISSUE_AMT		, REMAIN_AMT
			, EXC_MEMO      	, USE_YN    
            , ENT_DTTM      	, ENT_USER_ID
        ) VALUES (
            GET_JOB_SEQ('TB_EXCEED_MST', 'EXC_NO') 
			, #{chain_no} 		, #{exc_type} 	, #{exc_code}		, '0000'		
			, #{exc_status} 	, #{exc_date} 	, #{occur_amt} 		, #{issue_amt} , #{remain_amt}
			, #{exc_memo}  		, 'Y'
            , NOW()         	, #{ent_user_id}
        ) 
    </insert>

    <update id="updateExceedMst" parameterType="com.web.manage.deposit.domain.ExceedMstVO">
        UPDATE TB_EXCEED_MST
           SET  EXC_TYPE         	= #{exc_type}
		   		, EXC_CODE         	= #{exc_code}
				, EXC_STATUS       	= #{exc_status}
				, EXC_DATE         	= #{exc_date}
				, OCCUR_AMT        	= #{occur_amt}
				, ISSUE_AMT        	= #{issue_amt}
				, REMAIN_AMT       	= #{remain_amt}
				, EXC_MEMO         	= #{exc_memo}
				, USE_YN           	= #{use_yn}
               , UPT_USER_ID       	= #{upt_user_id}
               , UPT_DTTM         	= NOW()
         WHERE EXC_NO         		= #{exc_no}
    </update>


	<update id="setExceedReady" parameterType="com.web.manage.deposit.domain.ProcExceedVO">
        UPDATE 	TB_EXCEED_MST	EM
           SET  EXC_STATUS       	= '100000'
				, UPT_USER_ID       = #{userId}
               	, UPT_DTTM         	= NOW()
         WHERE 	FIND_IN_SET(EM.EXC_NO, #{excNo})
		   AND 	EM.CHAIN_NO 		= #{chainNo}
		   AND 	EM.EXC_STATUS 		= '000000'
    </update>

	<update id="setExceedReadyAll" parameterType="com.web.manage.deposit.domain.ProcExceedVO">
        UPDATE 	TB_EXCEED_MST	EM
           SET  EXC_STATUS       	= '100000'
				, UPT_USER_ID       = #{userId}
               	, UPT_DTTM         	= NOW()
         WHERE 	EM.CHAIN_NO 		= #{chainNo}
		   AND 	EM.EXC_STATUS 		= '000000'
    </update>

</mapper>