<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.manage.withdraw.mapper.SubtractMapper"> 
        <select id="getQueryTotalCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>     

        <select id="getSubSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">        
                SELECT  SQL_CALC_FOUND_ROWS
                        TC.CHAIN_NO                     AS chain_no
                        , TC.CHAIN_NM                   AS chain_nm
                        , IFNULL(SM.MIN_REG_DATE, DATE_FORMAT(NOW(), '%Y-%m-%d'))               AS min_reg_date
                        , IFNULL(SM.MAX_REG_DATE, DATE_FORMAT(NOW(), '%Y-%m-%d'))               AS max_reg_date
                        , IFNULL(OCCUR_AMT, 0)  	AS occur_amt
                        , IFNULL(OCCUR_BASE_AMT, 0) 	AS occur_base_amt
                        , IFNULL(OCCUR_SVC_AMT, 0) 	AS occur_svc_amt
                        , IFNULL(OCCUR_CRD_AMT, 0) 	AS occur_crd_amt
                        , IFNULL(RECV_AMT, 0) 	        AS recv_amt                        
                        , IFNULL(RECV_BASE_AMT, 0) 	AS recv_base_amt
                        , IFNULL(RECV_SVC_AMT, 0) 	AS recv_svc_amt
                        , IFNULL(RECV_CRD_AMT, 0) 	AS recv_crd_amt
                        , IFNULL(REMAIN_AMT, 0) 	AS remain_amt
                        , IFNULL(REMAIN_BASE_AMT, 0) 	AS remain_base_amt
                        , IFNULL(REMAIN_SVC_AMT, 0) 	AS remain_svc_amt
                        , IFNULL(REMAIN_CRD_AMT, 0) 	AS remain_crd_amt
                FROM	TB_CHAIN TC  
                        LEFT OUTER JOIN (        
                                SELECT	SM.CHAIN_NO
                                        , MIN(REG_DATE) 	        AS MIN_REG_DATE
                                        , MAX(REG_DATE) 	        AS MAX_REG_DATE
                                        , SUM(SM.OCCUR_AMT) 		AS OCCUR_AMT
                                        , SUM(SM.OCCUR_BASE_AMT) 	AS OCCUR_BASE_AMT
                                        , SUM(SM.OCCUR_SVC_AMT) 	AS OCCUR_SVC_AMT
                                        , SUM(SM.OCCUR_CRD_AMT) 	AS OCCUR_CRD_AMT
                                        , SUM(SM.RECV_AMT) 	        AS RECV_AMT
                                        , SUM(SM.RECV_BASE_AMT) 	AS RECV_BASE_AMT
                                        , SUM(SM.RECV_SVC_AMT) 	        AS RECV_SVC_AMT
                                        , SUM(SM.RECV_CRD_AMT) 	        AS RECV_CRD_AMT
                                        , SUM(SM.REMAIN_AMT) 	        AS REMAIN_AMT
                                        , SUM(SM.REMAIN_BASE_AMT) 	AS REMAIN_BASE_AMT
                                        , SUM(SM.REMAIN_SVC_AMT) 	AS REMAIN_SVC_AMT
                                        , SUM(SM.REMAIN_CRD_AMT) 	AS REMAIN_CRD_AMT    
                                  FROM 	TB_SUB_MST SM
                                 WHERE  SM.USE_YN = 'Y'
                                 <if test="sch_all == null or sch_all == ''">
                                        AND	SUB_STATUS IN ('000000', '100000', '900000')
                                </if>
                                   
                        <!-- <if test="sch_reg_sdt != ''">
                                AND  SM.REG_DATE &gt;= #{sch_reg_sdt} 
                        </if>
                        <if test="sch_reg_edt != ''">
                                AND  SM.REG_DATE &lt;= #{sch_reg_edt} 
                        </if>
                        <if test="sch_sub_type != ''">
                                AND  SM.SUB_TYPE = #{sch_sub_type} 
                        </if>
                        <if test="sch_sub_code != ''">
                                AND  SM.SUB_CODE = #{sch_sub_code} 
                        </if>
                        <if test="sch_sub_status != ''">
                                AND  SM.SUB_STATUS = #{sch_sub_status} 
                        </if>  -->
                                 GROUP 	BY SM.CHAIN_NO
                        ) SM ON SM.CHAIN_NO = TC.CHAIN_NO
                 WHERE	TC.USE_YN = 'Y'         
                   AND  TC.SVC_STAT IN ('O', 'R')
                   <if test="sch_chain_nm != ''">                   
                        AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
                   </if>                        
                <choose>
                        <when test="sidx != '' and sidx != null ">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>
        <select id="getSubSummaryTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">        
                SELECT  SQL_CALC_FOUND_ROWS
                        IFNULL(OCCUR_AMT, 0)  	AS occur_amt
                        , IFNULL(OCCUR_BASE_AMT, 0) 	AS occur_base_amt
                        , IFNULL(OCCUR_SVC_AMT, 0) 	AS occur_svc_amt
                        , IFNULL(OCCUR_CRD_AMT, 0) 	AS occur_crd_amt
                        , IFNULL(RECV_AMT, 0) 	        AS recv_amt                        
                        , IFNULL(RECV_BASE_AMT, 0) 	AS recv_base_amt
                        , IFNULL(RECV_SVC_AMT, 0) 	AS recv_svc_amt
                        , IFNULL(RECV_CRD_AMT, 0) 	AS recv_crd_amt
                        , IFNULL(REMAIN_AMT, 0) 	AS remain_amt
                        , IFNULL(REMAIN_BASE_AMT, 0) 	AS remain_base_amt
                        , IFNULL(REMAIN_SVC_AMT, 0) 	AS remain_svc_amt
                        , IFNULL(REMAIN_CRD_AMT, 0) 	AS remain_crd_amt
                FROM	TB_CHAIN TC  
                        LEFT OUTER JOIN (        
                                SELECT	SM.CHAIN_NO
                                        , MIN(REG_DATE) 	        AS MIN_REG_DATE
                                        , MAX(REG_DATE) 	        AS MAX_REG_DATE
                                        , SUM(SM.OCCUR_AMT) 		AS OCCUR_AMT
                                        , SUM(SM.OCCUR_BASE_AMT) 	AS OCCUR_BASE_AMT
                                        , SUM(SM.OCCUR_SVC_AMT) 	AS OCCUR_SVC_AMT
                                        , SUM(SM.OCCUR_CRD_AMT) 	AS OCCUR_CRD_AMT
                                        , SUM(SM.RECV_AMT) 	        AS RECV_AMT
                                        , SUM(SM.RECV_BASE_AMT) 	AS RECV_BASE_AMT
                                        , SUM(SM.RECV_SVC_AMT) 	        AS RECV_SVC_AMT
                                        , SUM(SM.RECV_CRD_AMT) 	        AS RECV_CRD_AMT
                                        , SUM(SM.REMAIN_AMT) 	        AS REMAIN_AMT
                                        , SUM(SM.REMAIN_BASE_AMT) 	AS REMAIN_BASE_AMT
                                        , SUM(SM.REMAIN_SVC_AMT) 	AS REMAIN_SVC_AMT
                                        , SUM(SM.REMAIN_CRD_AMT) 	AS REMAIN_CRD_AMT    
                                  FROM 	TB_SUB_MST SM
                                 WHERE  SM.USE_YN = 'Y'
                                 <if test="sch_all == null or sch_all == ''">
                                        AND	SUB_STATUS IN ('000000', '100000', '900000')
                                </if>
                                   
                                 GROUP 	BY SM.CHAIN_NO
                        ) SM ON SM.CHAIN_NO = TC.CHAIN_NO
                 WHERE	TC.USE_YN = 'Y'         
                   AND  TC.SVC_STAT IN ('O', 'R')
                   <if test="sch_chain_nm != ''">                   
                        AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
                   </if>
        </select>

        <select id="getChainSubList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        SM.SUB_NO                                       AS sub_no
                        , SM.CHAIN_NO                                   AS chain_no       
                        , SM.SUB_STATUS                                 AS sub_status        
                        , GET_CODE_NM('SUB_STATUS', SM.SUB_STATUS) 	AS sub_status_nm
                        , SM.CHAIN_NO                                   AS chain_no    
                        , TC.CHAIN_NM			                AS chain_nm
                        , GET_CODE_NM('SVC_STAT', TC.SVC_STAT)          AS svc_stat_nm
                        , SM.REG_DATE                                   AS reg_date
                        , SM.RESV_DATE                                  AS resv_date
                        , SM.SUB_TYPE                                   AS sub_type    
                        , GET_CODE_NM('SUB_TYPE', SM.SUB_TYPE) 	        AS sub_type_nm
                        , SM.SUB_CODE                                   AS sub_code
                        , GET_CODE_NM('SUB_CODE', SM.SUB_CODE) 	        AS sub_code_nm
                        , SM.SUB_MEMO                   AS sub_memo                        
                        , IFNULL(SM.OCCUR_AMT, 0)       AS occur_amt
                        , IFNULL(SM.OCCUR_BASE_AMT, 0)  AS occur_base_amt
                        , IFNULL(SM.OCCUR_SVC_AMT, 0)   AS occur_svc_amt                
                        , IFNULL(SM.OCCUR_CRD_AMT, 0)   AS occur_crd_amt
                        , IFNULL(SM.RECV_AMT, 0)        AS recv_amt
                        , IFNULL(SM.RECV_BASE_AMT, 0)   AS recv_base_amt
                        , IFNULL(SM.RECV_SVC_AMT, 0)    AS recv_svc_amt 
                        , IFNULL(SM.RECV_CRD_AMT, 0)    AS recv_crd_amt
                        , IFNULL(SM.REMAIN_AMT, 0)      AS remain_amt      
                        , IFNULL(SM.REMAIN_BASE_AMT, 0) AS remain_base_amt       
                        , IFNULL(SM.REMAIN_SVC_AMT, 0)  AS remain_svc_amt 
                        , IFNULL(SM.REMAIN_CRD_AMT, 0)  AS remain_crd_amt
                        , SM.SHIFT_FLAG                 AS shift_flag
                        , SM.SHIFT_SUB_NO               AS shift_sub_no                         
                        , SM.LOAN_NO                    AS loan_no
                        , SM.LOAN_SC_SEQ                AS loan_sc_seq
                        , SM.ADJUST_NO                  AS adjust_no
                        , SM.REMIT_NO                   AS remit_no
                        , SM.USE_YN                     AS use_yn
                        , DATE_FORMAT(IFNULL(SM.UPT_DTTM, SM.ENT_DTTM), '%Y-%m-%d %H:%i:%s')      AS upt_dttm
                        , IFNULL(SM.UPT_USER_ID, SM.ENT_USER_ID) 		                  AS upt_user_id
                FROM 	TB_SUB_MST SM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = SM.CHAIN_NO
                                        AND TC.USE_YN  = 'Y'
                WHERE	SM.USE_YN = 'Y'          
                  AND   SM.CHAIN_NO =  #{sch_chain_no}
                <if test='sch_reg_sdt != null and sch_reg_sdt != ""'>
                        AND  SM.REG_DATE &gt;= #{sch_reg_sdt} 
                </if>
                <if test='sch_reg_edt != null and sch_reg_edt != ""'>
                        AND  SM.REG_DATE &lt;= #{sch_reg_edt} 
                </if>
                <if test='sch_sub_code != null and sch_sub_type != ""'>
                        AND  SM.SUB_TYPE = #{sch_sub_type} 
                </if>
                <if test='sch_sub_code != null and sch_sub_code != ""'>
                        AND  SM.SUB_CODE = #{sch_sub_code} 
                </if>
                <if test='sch_sub_status != null and sch_sub_status != ""'>
                        AND  SM.SUB_STATUS = #{sch_sub_status} 
                </if>      
                <if test='sch_unissu != null and sch_unissu == "Y"'>
                        AND  SM.SUB_STATUS IN ('000000', '100000', '900000')
                        AND  SM.REMAIN_AMT &gt;= 0
                </if>          
                <choose>
                        <when test="sidx != '' and sidx != null ">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1 desc
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>
        
        <select id="getChainWdSubList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        SM.SUB_NO                                       AS sub_no
                        , SM.CHAIN_NO                                   AS chain_no       
                        , SM.SUB_STATUS                                 AS sub_status        
                        , GET_CODE_NM('SUB_STATUS', SM.SUB_STATUS) 	AS sub_status_nm
                        , SM.CHAIN_NO                                   AS chain_no    
                        , TC.CHAIN_NM			                AS chain_nm
                        , GET_CODE_NM('SVC_STAT', TC.SVC_STAT)          AS svc_stat_nm
                        , SM.REG_DATE                                   AS reg_date
                        , SM.RESV_DATE                                  AS resv_date
                        , SM.SUB_TYPE                                   AS sub_type    
                        , GET_CODE_NM('SUB_TYPE', SM.SUB_TYPE) 	        AS sub_type_nm
                        , SM.SUB_CODE                                   AS sub_code
                        , GET_CODE_NM('SUB_CODE', SM.SUB_CODE) 	        AS sub_code_nm
                        , SM.SUB_MEMO                   AS sub_memo                        
                        , IFNULL(SM.OCCUR_AMT, 0)       AS occur_amt
                        , IFNULL(SM.OCCUR_BASE_AMT, 0)  AS occur_base_amt
                        , IFNULL(SM.OCCUR_SVC_AMT, 0)   AS occur_svc_amt                
                        , IFNULL(SM.OCCUR_CRD_AMT, 0)   AS occur_crd_amt
                        , IFNULL(SM.RECV_AMT, 0)        AS recv_amt
                        , IFNULL(SM.RECV_BASE_AMT, 0)   AS recv_base_amt
                        , IFNULL(SM.RECV_SVC_AMT, 0)    AS recv_svc_amt 
                        , IFNULL(SM.RECV_CRD_AMT, 0)    AS recv_crd_amt
                        , IFNULL(SM.REMAIN_AMT, 0)      AS remain_amt      
                        , IFNULL(SM.REMAIN_BASE_AMT, 0) AS remain_base_amt       
                        , IFNULL(SM.REMAIN_SVC_AMT, 0)  AS remain_svc_amt 
                        , IFNULL(SM.REMAIN_CRD_AMT, 0)  AS remain_crd_amt
                        , SM.SHIFT_FLAG                 AS shift_flag
                        , SM.SHIFT_SUB_NO               AS shift_sub_no                         
                        , SM.LOAN_NO                    AS loan_no
                        , SM.LOAN_SC_SEQ                AS loan_sc_seq
                        , SM.ADJUST_NO                  AS adjust_no
                        , SM.REMIT_NO                   AS remit_no
                        , SM.USE_YN                     AS use_yn
                        , DATE_FORMAT(IFNULL(SM.UPT_DTTM, SM.ENT_DTTM), '%Y-%m-%d %H:%i:%s')      AS upt_dttm
                        , IFNULL(SM.UPT_USER_ID, SM.ENT_USER_ID) 		                  AS upt_user_id
                FROM 	TB_SUB_MST SM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = SM.CHAIN_NO
                                        AND TC.USE_YN  = 'Y'
                WHERE	SM.USE_YN = 'Y'          
                  AND   SM.CHAIN_NO =  #{sch_chain_no}
                  AND   SM.RESV_DATE &lt;= DATE_FORMAT(NOW(), '%Y-%m-%d')   
                  AND  SM.SUB_STATUS IN ('000000', '100000')
                  AND  SM.REMAIN_AMT &gt;= 0 
                <choose>
                        <when test="sidx != '' and sidx != null ">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1 desc
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select> 

        <select id="getSubReceiveList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        SR.SUB_NO                                       AS sub_no 
                        , RECV_DATE                                     AS recv_date
                        , RECV_TYPE                                     AS recv_type        
                        , GET_CODE_NM('RECV_TYPE', SR.RECV_TYPE)        AS recv_type_nm
                        , IFNULL(REMIT_NO, '')                          AS remit_no
                        , IFNULL(RECV_AMT, 0)                           AS recv_amt
                        , IFNULL(RECV_BASE_AMT, 0)                      AS recv_base_amt 
                        , IFNULL(RECV_SVC_AMT, 0)                       AS recv_svc_amt
                        , IFNULL(RECV_CRD_AMT, 0)                       AS recv_crd_amt 
                        , MEMO                                          AS memo
                        , TRANS_CHK                                     AS trans_chk
                        , ENT_USER_ID                                   AS ent_user_id            
                        , DATE_FORMAT(ENT_DTTM, '%Y-%m-%d %H:%i')       AS ent_dttm
                  FROM  TB_SUB_RECEIVE SR
                 WHERE  SUB_NO = #{sub_no} 
                 ORDER  BY 1
        </select>

         <select id="getNewSubNo" resultType="java.lang.String">
	    /* SubtractMapper.getNewSubNo */
		SELECT GET_JOB_SEQ('TB_SUB_MST', 'SUB_NO')
	</select>

        <insert id="insertSubMst" parameterType="com.web.manage.withdraw.domain.SubMstVO">
                INSERT INTO TB_SUB_MST (
                        SUB_NO                  , CHAIN_NO              , REG_DATE              , RESV_DATE
                        , SUB_TYPE              , SUB_STATUS            , SUB_CODE              , SUB_MEMO                            
                        , OCCUR_AMT             , OCCUR_BASE_AMT        , OCCUR_SVC_AMT         , OCCUR_CRD_AMT
                        , RECV_AMT              , RECV_BASE_AMT         , RECV_SVC_AMT          , RECV_CRD_AMT
                        , REMAIN_AMT            , REMAIN_BASE_AMT       , REMAIN_SVC_AMT        , REMAIN_CRD_AMT                        
                        , USE_YN                , ENT_USER_ID           , ENT_DTTM       
                )  VALUES  (
                        #{sub_no}               , #{chain_no}           , #{reg_date}           , #{resv_date}        
                        , #{sub_type}           , #{sub_status}         , #{sub_code}           , #{sub_memo}
                        , #{occur_amt}          , #{occur_base_amt}     , #{occur_svc_amt}      , #{occur_crd_amt}
                        , #{recv_amt}           , #{recv_base_amt}      , #{recv_svc_amt}       , #{recv_crd_amt}
                        , #{remain_amt}         , #{remain_base_amt}    , #{remain_svc_amt}     , #{remain_crd_amt}
                        , #{use_yn}             , #{ent_user_id}        , NOW()          
                )                                
	</insert>

	<update id="updateSubMst" parameterType="com.web.manage.withdraw.domain.SubMstVO">
                UPDATE  TB_SUB_MST
                   SET  REG_DATE        = #{reg_date},
                        RESV_DATE       = #{resv_date},
                        SUB_TYPE        = #{sub_type},                        
                        SUB_CODE        = #{sub_code},
                        SUB_STATUS      = #{sub_status},
                        SUB_MEMO        = #{sub_memo},
                        OCCUR_AMT       = #{occur_amt},
                        OCCUR_BASE_AMT  = #{occur_base_amt},
                        OCCUR_SVC_AMT   = #{occur_svc_amt},
                        OCCUR_CRD_AMT   = #{occur_crd_amt},
                        RECV_AMT        = #{recv_amt},
                        RECV_BASE_AMT   = #{recv_base_amt},
                        RECV_SVC_AMT    = #{recv_svc_amt},
                        RECV_CRD_AMT    = #{recv_crd_amt},
                        REMAIN_AMT      = #{remain_amt},
                        REMAIN_BASE_AMT = #{remain_base_amt},
                        REMAIN_SVC_AMT  = #{remain_svc_amt},
                        REMAIN_CRD_AMT  = #{remain_crd_amt},                        
                        USE_YN          = #{use_yn},
                        UPT_USER_ID     = #{upt_user_id},
                        UPT_DTTM        = NOW()
                WHERE   SUB_NO  = #{sub_no};
	</update>

        <update id="callProcSubReveive" parameterType="com.web.manage.withdraw.domain.ProcSubReceiveVO" statementType="CALLABLE">
                { 
                        CALL PRC_SUB_RECEIVE(
                                #{subNo         , mode=IN       , jdbcType=VARCHAR}
                                , #{recvType    , mode=IN       , jdbcType=VARCHAR}
                                , #{shiftChainNo, mode=IN       , jdbcType=VARCHAR}
                                , #{actionNo    , mode=IN       , jdbcType=VARCHAR}
                                , #{recvAmt     , mode=IN       , jdbcType=INTEGER, javaType=java.lang.Integer}
                                , #{memo        , mode=IN       , jdbcType=VARCHAR}
                                , #{userId      , mode=IN       , jdbcType=VARCHAR}
                                , #{resultCode  , mode=OUT      , jdbcType=INTEGER, javaType=java.lang.Integer} 
                                , #{resultMsg   , mode=OUT      , jdbcType=VARCHAR, javaType=java.lang.String}
                        ) 
                }
        </update>

        <select id="getSubStatSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">        
                SELECT  SQL_CALC_FOUND_ROWS
                        SM.CHAIN_NO             AS chain_no
                        , TC.CHAIN_NM           AS chain_nm
                        , TC.BIZ_NO             AS biz_no        
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN 1 	ELSE NULL END), 0)     		AS count_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN 1 	ELSE NULL END), 0)     		AS count_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_i        
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN 1 	ELSE NULL END), 0)     		AS count_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN (CASE WHEN SUB_STATUS  = '999999'   THEN RECV_AMT ELSE  OCCUR_AMT END ) ELSE NULL END), 0)     	AS occur_amt_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN (CASE WHEN SUB_STATUS  = '999999'    THEN NULL ELSE  REMAIN_AMT END )  ELSE NULL END), 0)     	        AS remain_amt_l        
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN 1 	ELSE NULL END), 0)     		AS count_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE 1 END), 0)     		AS count_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE OCCUR_AMT END), 0)     	AS occur_amt_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE RECV_AMT END), 0)     	AS recv_amt_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE REMAIN_AMT END), 0)     	AS remain_amt_etc
                        , COUNT(1)						                                                AS tot_cnt
                        , IFNULL(SUM(CASE WHEN SUB_STATUS  = '999999'   THEN RECV_AMT ELSE  OCCUR_AMT END ), 0)     	        AS occur_amt_tot
                        , IFNULL(SUM(RECV_AMT  ), 0)     	                                                                AS recv_amt_tot
                        , IFNULL(SUM(CASE WHEN SUB_STATUS  = '999999'  THEN NULL ELSE  REMAIN_AMT END ), 0)     	        AS remain_amt_tot
                        , MIN(SM.REG_DATE)                      AS min_reg_dt
                        , MAX(SM.REG_DATE)                      AS max_reg_dt        
                  FROM  TB_SUB_MST SM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = SM.CHAIN_NO
                        <if test="sch_chain_nm != ''"> 
                                AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
                        </if>
                        <if test="sch_agency_cd != ''"> 
                                AND  TC.AGENCY_CD = #{sch_agency_cd} 
                        </if>
                 WHERE	SM.USE_YN		= 'Y'
                <if test="sch_reg_sdt != ''">
                        AND  SM.REG_DATE &gt;= #{sch_reg_sdt} 
                </if>
                <if test="sch_reg_edt != ''">
                        AND  SM.REG_DATE &lt;= #{sch_reg_edt} 
                </if> 
                GROUP BY SM.CHAIN_NO, TC.CHAIN_NM, TC.BIZ_NO 
                <choose>
                        <when test="sidx != '' and sidx != null ">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>

        <select id="getSubStatSummaryTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">        
                SELECT  SQL_CALC_FOUND_ROWS
                          IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN 1 	ELSE NULL END), 0)     		AS count_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'O' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_o
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN 1 	ELSE NULL END), 0)     		AS count_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_i
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'I' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_i        
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN 1 	ELSE NULL END), 0)     		AS count_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN (CASE WHEN SUB_STATUS  = '999999'   THEN RECV_AMT ELSE  OCCUR_AMT END ) ELSE NULL END), 0)     	AS occur_amt_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_l
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'L' THEN (CASE WHEN SUB_STATUS  = '999999'    THEN NULL ELSE  REMAIN_AMT END )  ELSE NULL END), 0)     	        AS remain_amt_l        
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN 1 	ELSE NULL END), 0)     		AS count_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN OCCUR_AMT 	ELSE NULL END), 0)     	AS occur_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN RECV_AMT  	ELSE NULL END), 0)     	AS recv_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE = 'M' THEN REMAIN_AMT  ELSE NULL END), 0)     	AS remain_amt_m
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE 1 END), 0)     		AS count_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE OCCUR_AMT END), 0)     	AS occur_amt_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE RECV_AMT END), 0)     	AS recv_amt_etc
                        , IFNULL(SUM(CASE WHEN SUB_TYPE IN ('O', 'I', 'L', 'M') THEN NULL 	ELSE REMAIN_AMT END), 0)     	AS remain_amt_etc
                        , COUNT(1)						                                                AS tot_cnt
                        , IFNULL(SUM(CASE WHEN SUB_STATUS  = '999999'   THEN RECV_AMT ELSE  OCCUR_AMT END ), 0)     	        AS occur_amt_tot
                        , IFNULL(SUM(RECV_AMT  ), 0)     	                                                                AS recv_amt_tot
                        , IFNULL(SUM(CASE WHEN SUB_STATUS  = '999999'  THEN NULL ELSE  REMAIN_AMT END ), 0)     	        AS remain_amt_tot
                        , MIN(SM.REG_DATE)                      AS min_reg_dt
                        , MAX(SM.REG_DATE)                      AS max_reg_dt        
                  FROM  TB_SUB_MST SM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = SM.CHAIN_NO
                        <if test="sch_chain_nm != ''"> 
                                AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_nm}, '%')
                        </if>
                        <if test="sch_agency_cd != ''"> 
                                AND  TC.AGENCY_CD = #{sch_agency_cd} 
                        </if>
                 WHERE	SM.USE_YN		= 'Y'
                <if test="sch_reg_sdt != ''">
                        AND  SM.REG_DATE &gt;= #{sch_reg_sdt} 
                </if>
                <if test="sch_reg_edt != ''">
                        AND  SM.REG_DATE &lt;= #{sch_reg_edt} 
                </if>  
        </select>

        <select id="getSubStatDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">        
                SELECT  SQL_CALC_FOUND_ROWS 
                        SM.SUB_NO                               AS sub_no 
                        , SM.REG_DATE                           AS reg_date
                        , GET_CODE_NM('SUB_TYPE',SM.SUB_TYPE)  	AS sub_type_nm
                        , GET_CODE_NM('SUB_CODE',SM.SUB_CODE)  	AS sub_code_nm
                        , SM.SUB_MEMO                           AS sub_memo
                        , SM.SUB_STATUS                         AS sub_status
                        , GET_CODE_NM('SUB_STATUS',SM.SUB_STATUS) AS sub_status_nm
                        , SM.OCCUR_AMT                          AS occur_amt
                        , SM.RECV_AMT                           AS recv_amt 
                        , SM.REMAIN_AMT                         AS remain_amt
                        , IFNULL(SM.UPT_USER_ID, SM.ENT_USER_ID)   AS upt_user_id
                  FROM  TB_SUB_MST SM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = SM.CHAIN_NO 
                 WHERE	SM.USE_YN       = 'Y'    
                   AND  SM.CHAIN_NO     = #{sch_list_chain_no}                 
                <if test="sch_list_reg_sdt != ''">
                        AND  SM.REG_DATE &gt;= #{sch_list_reg_sdt} 
                </if>
                <if test="sch_list_reg_edt != ''">
                        AND  SM.REG_DATE &lt;= #{sch_list_reg_edt} 
                </if>
                <if test="sch_sub_type != ''">
                        AND  SM.SUB_TYPE = #{sch_sub_type} 
                </if>
                <if test="sch_sub_code != null and sch_sub_code != ''">
                        AND  SM.SUB_CODE = #{sch_sub_code} 
                </if>
                <if test="sch_sub_status != ''">
                        AND  SM.SUB_STATUS = #{sch_sub_status} 
                </if>                   
                <choose>
                        <when test="sidx != '' and sidx != null ">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>

</mapper>