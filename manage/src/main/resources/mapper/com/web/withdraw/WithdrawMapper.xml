<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.manage.withdraw.mapper.WithdrawMapper">

	<select id="getQueryTotalCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
  
        <select id="getWDSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        TC.CHAIN_NO				AS chain_no
                        , GET_RISK_GRADE(TC.CHAIN_NO)           AS risk_grade
                        , TC.CHAIN_NM				AS chain_nm
                        , TC.BIZ_NO			        AS biz_no
                        , TC.REMIT_STAT				AS remit_stat
                        , VW.WORK_DATE				AS work_date        
                        , IFNULL(VW.TOT_CNT, 0) 		AS tot_cnt
                        , IFNULL(VW.TOT_AMT, 0) 		AS tot_amt
                        , IFNULL(VW.CONF_CNT, 0) 		AS conf_cnt
                        , IFNULL(VW.CNCL_CNT, 0) 		AS cncl_cnt
                        , IFNULL(VW.CONF_AMT, 0) 		AS conf_amt
                        , IFNULL(VW.CNCL_AMT, 0) 		AS cncl_amt
                        , IFNULL(VW.REMIT_CONF_CNT, 0)          AS remit_conf_cnt
                        , IFNULL(VW.REMIT_CONF_AMT, 0)          AS remit_conf_amt
                        , IFNULL(VW.CNCL_DAY_CNT, 0) 	        AS cncl_day_cnt
                        , IFNULL(VW.CNCL_DAY_AMT, 0) 	        AS cncl_day_amt
                        , IFNULL(VW.CNCL_PRE_CNT, 0) 	        AS cncl_pre_cnt
                        , IFNULL(VW.CNCL_PRE_AMT, 0) 	        AS cncl_pre_amt
                        , IFNULL(VW.RCOUNT, 0) 			AS rcount
                        , IFNULL(VW.ERRCOUNT, 0) 		AS error_cnt
                        , IFNULL(VW.RESV_AMT, 0) 		AS resv_amt
                        , IFNULL(VW.UNRESV_AMT, 0) 		AS unresv_amt
                        , IFNULL(CARD_FEE_AMT, 0) 	        AS card_fee_amt
                        , IFNULL(CARD_RESV_AMT, 0)              AS card_resv_amt
                        , IFNULL(WD_BASE_AMT, 0) 	        AS wd_base_amt
                        , IFNULL(SVC_FEE_AMT, 0)                AS svc_fee_amt
                        , IFNULL(CRD_FEE_AMT, 0)                AS crd_fee_amt
                        , IFNULL(VW.EXC_AMT, 0) 		AS exc_amt
                        , IFNULL(SR.SUB_AMT, 0)		        AS sub_amt
                        , IFNULL(VW.WD_BASE_AMT, 0) + IFNULL(VW.EXC_AMT, 0)
                        - ( IFNULL(SVC_FEE_AMT, 0) + IFNULL(SR.SUB_AMT, 0))	AS remit_amt
                FROM	(
                                SELECT 	CHAIN_NO, WORK_DATE 
                                        , IFNULL(SUM(TOT_CNT), 0) 		AS TOT_CNT					  					 
                                        , IFNULL(SUM(TOT_AMT), 0) 		AS TOT_AMT
                                        , IFNULL(SUM(CONF_CNT), 0) 	        AS CONF_CNT					  					 
                                        , IFNULL(SUM(CNCL_CNT), 0) 	        AS CNCL_CNT
                                        , IFNULL(SUM(CONF_AMT), 0) 	        AS CONF_AMT				  					 
                                        , IFNULL(SUM(CNCL_AMT), 0) 	        AS CNCL_AMT
                                        , IFNULL(SUM(REMIT_CONF_CNT), 0)	AS REMIT_CONF_CNT
                                        , IFNULL(SUM(REMIT_CONF_AMT), 0)	AS REMIT_CONF_AMT                    
                                        , IFNULL(SUM(CNCL_DAY_CNT), 0)	        AS CNCL_DAY_CNT
                                        , IFNULL(SUM(CNCL_DAY_AMT), 0)	        AS CNCL_DAY_AMT
                                        , IFNULL(SUM(CNCL_PRE_CNT), 0)	        AS CNCL_PRE_CNT
                                        , IFNULL(SUM(CNCL_PRE_AMT), 0)	        AS CNCL_PRE_AMT                    
                                        , IFNULL(SUM(RCOUNT), 0) 		AS RCOUNT
                                        , IFNULL(SUM(ERRCOUNT), 0) 	        AS ERRCOUNT
                                        , IFNULL(SUM(RESV_AMT), 0) 	        AS RESV_AMT
                                        , IFNULL(SUM(UNRESV_AMT), 0) 	        AS UNRESV_AMT
                                        , IFNULL(SUM(CARD_FEE_AMT), 0) 	        AS CARD_FEE_AMT
                                        , IFNULL(SUM(CARD_RESV_AMT), 0)         AS CARD_RESV_AMT
                                        , IFNULL(SUM(WD_BASE_AMT), 0) 	        AS WD_BASE_AMT
                                        , IFNULL(SUM(SVC_FEE_AMT), 0)           AS SVC_FEE_AMT
                                        , IFNULL(SUM(CRD_FEE_AMT), 0)           AS CRD_FEE_AMT
                                        , IFNULL(SUM(EXC_AMT), 0) 		AS EXC_AMT
                                  FROM	VW_WITHDRAW_RESV_LIST                                
                                WHERE 	WORK_DATE = #{sch_work_date} 
                                GROUP	BY CHAIN_NO, WORK_DATE 
                        ) VW  
                        LEFT OUTER JOIN (	SELECT  CHAIN_NO, SUM(SUB_AMT) AS SUB_AMT
                                                FROM 	VW_WD_SUB_RESV_LIST
                                                GROUP 	BY CHAIN_NO
                                        ) SR ON SR.CHAIN_NO = VW.CHAIN_NO
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = VW.CHAIN_NO
                                        AND TC.SVC_STAT = 'O'
                                        AND TC.USE_YN   = 'Y'
                                        AND TC.REMIT_STAT = 'Y'
                                        <if test="sch_agency_cd != ''"> 
                                                AND  TC.AGENCY_CD = #{sch_agency_cd} 
                                        </if>
                                        <if test="sch_corp_no != null and sch_corp_no != ''"> 
                                                AND  TC.CORP_CD = #{sch_corp_no} 
                                        </if> 
                                        <if test="sch_chain_val != ''">
                                                <choose>
                                                        <when test="sch_chain_gb == 'schgb_biz_no'">
                                                                AND  TC.BIZ_NO  = #{sch_chain_val}
                                                        </when> 
                                                        <when test="sch_chain_gb == 'schgb_chain_nm'">
                                                                AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_val}, '%')
                                                        </when>
                                                </choose>
                                        </if> 
                                        
                <choose>
                        <when test="sidx != ''">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>

        <select id="getWDSummaryTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT    IFNULL(SUM(VW.TOT_CNT), 0) 		AS tot_cnt
                        , IFNULL(SUM(VW.CONF_CNT), 0) 		AS conf_cnt
                        , IFNULL(SUM(VW.CNCL_CNT), 0) 		AS cncl_cnt
                        , IFNULL(SUM(VW.CONF_AMT), 0) 		AS conf_amt
                        , IFNULL(SUM(VW.CNCL_AMT), 0) 		AS cncl_amt
                        , IFNULL(SUM(VW.REMIT_CONF_CNT), 0)     AS remit_conf_cnt
                        , IFNULL(SUM(VW.REMIT_CONF_AMT), 0)     AS remit_conf_amt
                        , IFNULL(SUM(VW.CNCL_DAY_CNT), 0) 	AS cncl_day_cnt
                        , IFNULL(SUM(VW.CNCL_DAY_AMT), 0) 	AS cncl_day_amt
                        , IFNULL(SUM(VW.CNCL_PRE_CNT), 0) 	AS cncl_pre_cnt
                        , IFNULL(SUM(VW.CNCL_PRE_AMT), 0) 	AS cncl_pre_amt
                        , IFNULL(SUM(VW.RCOUNT), 0) 		AS rcount
                        , IFNULL(SUM(VW.ERRCOUNT), 0) 		AS error_cnt
                        , IFNULL(SUM(VW.RESV_AMT), 0) 		AS resv_amt
                        , IFNULL(SUM(VW.UNRESV_AMT), 0) 	AS unresv_amt
                        , IFNULL(SUM(CARD_FEE_AMT), 0) 	        AS card_fee_amt
                        , IFNULL(SUM(CARD_RESV_AMT), 0)         AS card_resv_amt
                        , IFNULL(SUM(WD_BASE_AMT), 0) 	        AS wd_base_amt
                        , IFNULL(SUM(SVC_FEE_AMT), 0)           AS svc_fee_amt
                        , IFNULL(SUM(CRD_FEE_AMT), 0)           AS crd_fee_amt
                        , IFNULL(SUM(VW.EXC_AMT), 0) 		AS exc_amt
                        , IFNULL(SUM(SR.SUB_AMT), 0)		AS sub_amt
                        , IFNULL(SUM(
                                (IFNULL(VW.WD_BASE_AMT, 0) + IFNULL(VW.EXC_AMT, 0))
                              - (IFNULL(SVC_FEE_AMT, 0) + IFNULL(SR.SUB_AMT, 0))
                                ), 0)	                        AS remit_amt
                FROM	(
                                SELECT 	CHAIN_NO, WORK_DATE 
                                        , IFNULL(SUM(TOT_CNT), 0) 		AS TOT_CNT					  					 
                                        , IFNULL(SUM(TOT_AMT), 0) 		AS TOT_AMT
                                        , IFNULL(SUM(CONF_CNT), 0) 	        AS CONF_CNT					  					 
                                        , IFNULL(SUM(CNCL_CNT), 0) 	        AS CNCL_CNT
                                        , IFNULL(SUM(CONF_AMT), 0) 	        AS CONF_AMT				  					 
                                        , IFNULL(SUM(CNCL_AMT), 0) 	        AS CNCL_AMT
                                        , IFNULL(SUM(REMIT_CONF_CNT), 0)	AS REMIT_CONF_CNT
                                        , IFNULL(SUM(REMIT_CONF_AMT), 0)	AS REMIT_CONF_AMT                    
                                        , IFNULL(SUM(CNCL_DAY_CNT), 0)	        AS CNCL_DAY_CNT
                                        , IFNULL(SUM(CNCL_DAY_AMT), 0)	        AS CNCL_DAY_AMT
                                        , IFNULL(SUM(CNCL_PRE_CNT), 0)	        AS CNCL_PRE_CNT
                                        , IFNULL(SUM(CNCL_PRE_AMT), 0)	        AS CNCL_PRE_AMT                    
                                        , IFNULL(SUM(RCOUNT), 0) 		AS RCOUNT
                                        , IFNULL(SUM(ERRCOUNT), 0) 	        AS ERRCOUNT
                                        , IFNULL(SUM(RESV_AMT), 0) 	        AS RESV_AMT
                                        , IFNULL(SUM(UNRESV_AMT), 0) 	        AS UNRESV_AMT
                                        , IFNULL(SUM(CARD_FEE_AMT), 0) 	        AS CARD_FEE_AMT
                                        , IFNULL(SUM(CARD_RESV_AMT), 0)         AS CARD_RESV_AMT
                                        , IFNULL(SUM(WD_BASE_AMT), 0) 	        AS WD_BASE_AMT
                                        , IFNULL(SUM(SVC_FEE_AMT), 0)           AS SVC_FEE_AMT
                                        , IFNULL(SUM(CRD_FEE_AMT), 0)           AS CRD_FEE_AMT
                                        , IFNULL(SUM(EXC_AMT), 0) 		AS EXC_AMT
                                  FROM	VW_WITHDRAW_RESV_LIST                                
                                WHERE 	WORK_DATE = #{sch_work_date} 
                                GROUP	BY CHAIN_NO, WORK_DATE 
                        ) VW  
                        LEFT OUTER JOIN (	
                                                SELECT  CHAIN_NO, SUM(SUB_AMT) AS SUB_AMT
                                                  FROM 	VW_WD_SUB_RESV_LIST
                                                 GROUP 	BY CHAIN_NO
                                        ) SR ON SR.CHAIN_NO = VW.CHAIN_NO
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = VW.CHAIN_NO
                                        AND TC.SVC_STAT = 'O'
                                        AND TC.USE_YN   = 'Y'
                                        AND TC.REMIT_STAT = 'Y'
                                        <if test="sch_agency_cd != ''"> 
                                                AND  TC.AGENCY_CD = #{sch_agency_cd} 
                                        </if>
                                        <if test="sch_corp_no != null and sch_corp_no != ''"> 
                                                AND  TC.CORP_CD = #{sch_corp_no} 
                                        </if> 
                                        <if test="sch_chain_val != ''">
                                                <choose>
                                                        <when test="sch_chain_gb == 'schgb_biz_no'">
                                                                AND  TC.BIZ_NO  = #{sch_chain_val}
                                                        </when> 
                                                        <when test="sch_chain_gb == 'schgb_chain_nm'">
                                                                AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_val}, '%')
                                                        </when>
                                                </choose>
                                        </if> 
                                        
                 
        </select>

        <select id="getWDChainSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  VW.CHAIN_NO                     AS chain_no
                        , IFNULL(VW.REMIT_CONF_AMT, 0)  as remit_conf_amt
                        , IFNULL(VW.REMIT_CONF_CNT, 0)  as remit_conf_cnt
                        , IFNULL(CARD_RESV_AMT, 0)      as card_resv_amt
                        , IFNULL(CARD_FEE_AMT, 0)       as card_fee_amt
                        , IFNULL(WD_BASE_AMT, 0)        as wd_base_amt
                        , IFNULL(SVC_FEE_AMT, 0)        as svc_fee_amt
                        , IFNULL(CRD_FEE_AMT, 0)        as crd_fee_amt
                        , IFNULL(EXC_AMT, 0)            as exc_amt
                        , IFNULL(SR.SUB_AMT, 0)         as sub_amt
                        , (IFNULL(VW.CARD_RESV_AMT, 0) + IFNULL(VW.EXC_AMT, 0))
                                        - ( IFNULL(VW.SVC_FEE_AMT, 0) + IFNULL(VW.CRD_FEE_AMT, 0) + + IFNULL(SR.SUB_AMT, 0)) as remit_amt
                  FROM  (
                                SELECT 	CHAIN_NO
                                        , IFNULL(SUM(REMIT_CONF_CNT), 0)	AS REMIT_CONF_CNT
                                        , IFNULL(SUM(REMIT_CONF_AMT), 0)	AS REMIT_CONF_AMT         
                                        , IFNULL(SUM(CARD_RESV_AMT), 0) 	AS CARD_RESV_AMT
                                        , IFNULL(SUM(CARD_FEE_AMT), 0) 	        AS CARD_FEE_AMT
                                        , IFNULL(SUM(WD_BASE_AMT), 0) 	        AS WD_BASE_AMT
                                        , IFNULL(SUM(SVC_FEE_AMT), 0)           AS SVC_FEE_AMT
                                        , IFNULL(SUM(CRD_FEE_AMT), 0)           AS CRD_FEE_AMT
                                        , IFNULL(SUM(EXC_AMT), 0) 		AS EXC_AMT
                                FROM	VW_WITHDRAW_RESV_LIST
                                WHERE 	WORK_DATE = #{sch_card_work_date} 
                                AND  CHAIN_NO  = #{sch_card_chain_no} 
                                GROUP	BY CHAIN_NO, WORK_DATE  
                        ) VW  
                        LEFT OUTER JOIN (	
                                SELECT  CHAIN_NO, SUM(SUB_AMT) AS SUB_AMT
                                FROM 	VW_WD_SUB_RESV_LIST
                                WHERE  CHAIN_NO = #{sch_card_chain_no} 
                                GROUP 	BY CHAIN_NO
                        ) SR ON SR.CHAIN_NO = VW.CHAIN_NO
                 LIMIT  1
        </select>

        <select id="getWDCardSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT 	SQL_CALC_FOUND_ROWS
                        CARD_ACQ                                AS card_acq
                        , GET_CODE_NM('CARD_ACQ', CARD_ACQ)     AS card_acq_nm
                        , IFNULL(SUM(TOT_CNT), 0) 		AS tot_cnt					  					 
                        , IFNULL(SUM(TOT_AMT), 0) 		AS tot_amt
                        , IFNULL(SUM(CONF_CNT), 0) 	        AS conf_cnt					  					 
                        , IFNULL(SUM(CNCL_CNT), 0) 	        AS cncl_cnt
                        , IFNULL(SUM(CONF_AMT), 0) 	        AS conf_amt				  					 
                        , IFNULL(SUM(CNCL_AMT), 0) 	        AS cncl_amt
                        , IFNULL(SUM(REMIT_CONF_CNT), 0)	AS remit_conf_cnt
                        , IFNULL(SUM(REMIT_CONF_AMT), 0)	AS remit_conf_amt                    
                        , IFNULL(SUM(CNCL_DAY_CNT), 0)	        AS cncl_day_cnt
                        , IFNULL(SUM(CNCL_DAY_AMT), 0)	        AS cncl_day_amt
                        , IFNULL(SUM(CNCL_PRE_CNT), 0)	        AS cncl_pre_cnt
                        , IFNULL(SUM(CNCL_PRE_AMT), 0)	        AS cncl_pre_amt                    
                        , IFNULL(SUM(RCOUNT), 0) 		AS rcount
                        , IFNULL(SUM(ERRCOUNT), 0) 	        AS errcount
                        , IFNULL(SUM(RESV_AMT), 0) 	        AS resv_amt
                        , IFNULL(SUM(UNRESV_AMT), 0) 	        AS unresv_amt
                        , IFNULL(SUM(WD_BASE_AMT), 0) 	        AS wd_base_amt
                        , IFNULL(SUM(SVC_FEE_AMT), 0)           AS svc_fee_amt
                        , IFNULL(SUM(EXC_AMT), 0) 	        AS exc_amt
                  FROM	VW_WITHDRAW_RESV_LIST
                 WHERE 	WORK_DATE = #{sch_card_work_date} 
                   AND  CHAIN_NO = #{sch_card_chain_no} 
                 GROUP	BY CARD_ACQ, GET_CODE_NM('CARD_ACQ', CARD_ACQ) 
                <choose>
                        <when test="sidx != ''">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                <!-- LIMIT  ${start}, ${end}   -->
        </select>
 
        <select id="getWDResvList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        WD.WD_NO                AS wd_no
                        , WD.WD_STATUS          AS wd_status
                        , GET_CODE_NM('WD_STATUS', WD.WD_STATUS)    AS wd_status_nm
                        , WD.WORK_DATE          AS work_date
                        , WD.CHAIN_NO           AS chain_no
                        , TC.CHAIN_NM           AS chain_nm
                        , WD.DOCU_SEQ           AS docu_seq
                        , WD.CARD_ACQ           AS card_acq
                        , GET_CODE_NM('CARD_ACQ', WD.CARD_ACQ)      AS card_acq_nm
                        , VD.CARD_NO            AS card_no        
                        , WD.CARD_REG_NO        AS card_reg_no
                        , VD.CARD_TYPE          AS card_type
                        , GET_CODE_NM('CARD_TYPE', VD.CARD_TYPE)    AS card_type_nm
                        , WD.CONF_NO            AS conf_no
                        , WD.CONF_GB            AS conf_gb
                        , CASE WHEN WD.CONF_GB = 'A' THEN '승인' ELSE '취소' END AS conf_gb_nm
                        , WD.CONF_DTTM          AS conf_dttm
                        , WD.CONF_AMT           AS conf_amt
                        , WD.CARD_BUY_FLAG      AS card_buy_flag
                        , WD.CARD_BUY_DATE      AS card_buy_date
                        , WD.CARD_FEE_RATE      AS fard_fee_rate
                        , WD.CARD_FEE_AMT       AS card_fee_amt
                        , IFNULL(WD.CARD_RESV_AMT, 0)   AS card_resv_amt
                        , IFNULL(WD.CARD_RESV_DAY, 0)   AS card_resv_day
                        , IFNULL(WD.CARD_RESV_DATE, '') AS card_resv_date
                        , IFNULL(WD.SVC_FEE_RATE, 0)    AS svc_fee_rate
                        , IFNULL(WD.SVC_FEE_AMT, 0)     AS svc_fee_amt
                        , IFNULL(WD.WD_BASE_AMT, 0)     AS wd_base_amt
                        , IFNULL(WD.CRD_FEE_RATE, 0)    AS crd_fee_rate
                        , IFNULL(WD.CRD_FEE_AMT, 0)     AS crd_fee_amt
                        , IFNULL(WD.SUB_FLAG, 'N')      AS sub_flag
                        , IFNULL(WD.REMIT_AMT, 0)       AS remit_amt
                        , IFNULL(WD.REMIT_NO, '')       AS remit_seq
                        , IFNULL(WD.REMIT_DT, '')     AS remit_dt
                        , IFNULL(WD.DEPOSIT_FLAG, '')   AS deposit_flag
                        , IFNULL(WD.BANK_IN_DATE, '')   AS bank_in_date
                        , IFNULL(WD.CARDSALES_FG, '')   AS cardsales_fg
                        , WD.USE_YN                     AS use_yn
                        , IFNULL(WD.WD_MEMO, '')        AS wd_memo
                        , WD.CLOSE_YN                   AS close_yn
                        , DATE_FORMAT(IFNULL(WD.UPT_DTTM, WD.ENT_DTTM), '%Y-%m-%d %H:%i:%s')              AS upt_dttm
                        , DATE_FORMAT(IFNULL(WD.ENT_USER_ID,  WD.UPT_USER_ID), '%Y-%m-%d %H:%i:%s')       AS upt_user_id
                  FROM  TB_WITHDRAW WD
                        JOIN TB_VAN_DOCU VD ON VD.DOCU_SEQ = WD.DOCU_SEQ
                        JOIN TB_CHAIN   TC ON TC.CHAIN_NO = WD.CHAIN_NO 
                WHERE  1=1
                AND  WD.WORK_DATE    = #{sch_list_work_date} 
                AND  WD.CHAIN_NO     = #{sch_list_chain_no} 
                AND  WD.WD_STATUS    LIKE 'W%'  
                <choose>
                        <when test='sch_list_wd_status != null and sch_list_wd_status == "Y"'>
                                AND WD.WD_STATUS  IN ('W00000', 'W00C00', 'W00C11', 'W00C12')
                        </when>
                        <when test='sch_list_wd_status != null and sch_list_wd_status == "N"'>

                                AND WD.WD_STATUS  NOT IN ('W00000', 'W00C00', 'W00C11', 'W00C12')
                        </when>                         
                </choose>                
                <if test="sch_list_card_acq != ''"> 
                        AND  FIND_IN_SET(WD.CARD_ACQ, #{sch_list_card_acq})  
                </if>
                <if test="sch_list_gb_conf_val != ''">
                        <choose>
                                <when test="sch_list_gb == 'sch_list_gb_conf_no'">
                                        AND WD.CONF_NO  = #{sch_list_gb_conf_val}
                                </when>
                                <when test="sch_list_gb == 'sch_list_gb_card_no'">
                                        AND WD.CARD_NO  = #{sch_list_gb_conf_val}
                                </when>
                                <when test="sch_list_gb == 'sch_list_gb_conf_amt'">
                                        AND WD.CONF_AMT  = #{sch_list_gb_conf_val}
                                </when>
                        </choose>
                </if>  
                <choose>
                        <when test="sidx != ''">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>

        <update id="callProcRemitMain" parameterType="com.web.manage.withdraw.domain.ProcRemitVO" statementType="CALLABLE">
                { 
                        CALL PRC_REMIT_MAIN(
                                #{chainNo, mode=IN, jdbcType=VARCHAR}
                                , #{workDate, mode=IN, jdbcType=VARCHAR}
                                , #{userId, mode=IN, jdbcType=VARCHAR}
                                , #{resultCode, mode=OUT, jdbcType=INTEGER, javaType=java.lang.Integer}
                                , #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
                        ) 
                }
        </update>


        <update id="changeWdStatus" parameterType="com.web.manage.withdraw.domain.ProcRemitVO">
                UPDATE TB_WITHDRAW
                   SET 
                        WD_STATUS       = #{wdStatus},
                        UPT_USER_ID     = #{userId},
                        UPT_DTTM        = NOW()
                WHERE   FIND_IN_SET(WD_NO, #{wdNo})  
	</update>

        <update id="changeWorkDate" parameterType="com.web.manage.withdraw.domain.ProcRemitVO">
                UPDATE TB_WITHDRAW
                   SET 
                        WORK_DATE       = #{workDate},
                        UPT_USER_ID     = #{userId},
                        UPT_DTTM        = NOW()
                WHERE   FIND_IN_SET(WD_NO, #{wdNo})  
	</update>

        <select id="getRemitSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        RM.CHAIN_NO                                             AS chain_no       
                        , TC.CHAIN_NM 		                                AS chain_nm
                        , TC.BIZ_NO                                             AS biz_no
                        , RM.CORP_CD                                            AS corp_cd
                        , CO.CORP_NM                                            AS corp_nm
                        , TC.BBANK_CD                                           AS bbank_cd
                        , GET_CODE_NM('BANK_CD', TC.BBANK_CD)	                AS bbank_nm
                        , TC.BBANK_ACCOUNT_NO                                   AS bbank_account_no
                        , TU.USER_NM                                            AS ceo_nm
                        , RM.REMIT_NO                                           AS remit_no
                        , RM.REMIT_STATUS                                       AS remit_status    
                        , GET_CODE_NM('WD_STATUS', RM.REMIT_STATUS)             AS remit_status_nm
                        , RM.REMIT_DT	                                        AS remit_dt
                        , RM.CONF_AMT                                           AS conf_amt        
                        , RM.CARD_FEE_AMT                                       AS card_fee_amt
                        , RM.CARD_RESV_AMT                                      AS card_resv_amt
                        , RM.WD_BASE_AMT                                        AS wd_base_amt        
                        , RM.SVC_FEE_AMT                                        AS svc_fee_amt
                        , RM.CRD_FEE_AMT                                        AS crd_fee_amt
                        , RM.WD_REMIT_AMT                                       AS wd_remit_amt
                        , RM.EXC_REMIT_AMT                                      AS exc_remit_amt
                        , RM.TOT_REMIT_AMT                                      AS tot_remit_amt
                        , RM.SUB_AMT                                            AS sub_amt
                        , RM.REMIT_AMT                                          AS remit_amt
                        , RM.MEMO                                               AS memo
                        , DATE_FORMAT(IFNULL(RM.UPT_DTTM, RM.ENT_DTTM), '%Y-%m-%d %H:%i:%s')	AS upt_dttm
                        , IFNULL(RM.UPT_USER_ID, RM.ENT_USER_ID)		AS upt_user_id
                  FROM  TB_REMIT_MST RM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = RM.CHAIN_NO                        
                                        AND TC.SVC_STAT = 'O'
                                        AND TC.USE_YN   = 'Y'
                                        AND TC.REMIT_STAT = 'Y'
                                        <if test="sch_agency_cd != ''"> 
                                                AND  TC.AGENCY_CD = #{sch_agency_cd} 
                                        </if>
                                        <if test="sch_corp_no != null and sch_corp_no != ''"> 
                                                AND  TC.CORP_CD = #{sch_corp_no} 
                                        </if> 
                                        <if test="sch_chain_val != ''">
                                                <choose>
                                                        <when test="sch_chain_gb == 'schgb_biz_no'">
                                                                AND  TC.BIZ_NO  = #{sch_chain_val}
                                                        </when> 
                                                        <when test="sch_chain_gb == 'schgb_chain_nm'">
                                                                AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_val}, '%')
                                                        </when>
                                                </choose>
                                        </if> 
                        JOIN TB_USER TU ON TU.USER_ID = TC.CEO_ID  
                        JOIN TB_CORP CO ON CO.CORP_CD = TC.CORP_CD
                                        AND CO.USE_YN = 'Y'
                 WHERE	RM.REMIT_DT BETWEEN #{sch_remit_dt}
                                          AND #{sch_remit_dt}
                <choose>
                        <when test="sidx != ''">
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>

        <select id="getRemitSummaryTotal" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                          IFNULL(SUM(RM.CONF_AMT), 0)                                           AS conf_amt        
                        , IFNULL(SUM(RM.CARD_FEE_AMT), 0)                                       AS card_fee_amt
                        , IFNULL(SUM(RM.CARD_RESV_AMT), 0)                                      AS card_resv_amt
                        , IFNULL(SUM(RM.WD_BASE_AMT), 0)                                        AS wd_base_amt        
                        , IFNULL(SUM(RM.SVC_FEE_AMT), 0)                                        AS svc_fee_amt
                        , IFNULL(SUM(RM.CRD_FEE_AMT), 0)                                        AS crd_fee_amt
                        , IFNULL(SUM(RM.WD_REMIT_AMT), 0)                                       AS wd_remit_amt
                        , IFNULL(SUM(RM.EXC_REMIT_AMT), 0)                                      AS exc_remit_amt
                        , IFNULL(SUM(RM.TOT_REMIT_AMT), 0)                                      AS tot_remit_amt
                        , IFNULL(SUM(RM.SUB_AMT), 0)                                            AS sub_amt
                        , IFNULL(SUM(RM.REMIT_AMT), 0)                                          AS remit_amt                        
                  FROM  TB_REMIT_MST RM
                        JOIN TB_CHAIN TC ON TC.CHAIN_NO = RM.CHAIN_NO                        
                                AND TC.SVC_STAT = 'O'
                                AND TC.USE_YN   = 'Y'
                                AND TC.REMIT_STAT = 'Y'
                                <if test="sch_agency_cd != ''"> 
                                        AND  TC.AGENCY_CD = #{sch_agency_cd} 
                                </if>
                                <if test="sch_corp_no != null and sch_corp_no != ''"> 
                                        AND  TC.CORP_CD = #{sch_corp_no} 
                                </if> 
                                <if test="sch_chain_val != ''">
                                        <choose>
                                                <when test="sch_chain_gb == 'schgb_biz_no'">
                                                        AND  TC.BIZ_NO  = #{sch_chain_val}
                                                </when> 
                                                <when test="sch_chain_gb == 'schgb_chain_nm'">
                                                        AND  TC.CHAIN_NM LIKE CONCAT('%', #{sch_chain_val}, '%')
                                                </when>
                                        </choose>
                                </if> 
                        JOIN TB_USER TU ON TU.USER_ID = TC.CEO_ID  
                        JOIN TB_CORP CO ON CO.CORP_CD = TC.CORP_CD
                                        AND CO.USE_YN = 'Y'
                 WHERE	RM.REMIT_DT BETWEEN #{sch_remit_dt}
                                          AND #{sch_remit_dt}
        </select>

        <select id="getRemitList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        WD.WD_NO                AS wd_no
                        , WD.WD_STATUS          AS wd_status
                        , GET_CODE_NM('WD_STATUS', WD.WD_STATUS)    AS wd_status_nm
                        , WD.WORK_DATE          AS work_date
                        , WD.CHAIN_NO           AS chain_no
                        , TC.CHAIN_NM           AS chain_nm
                        , WD.DOCU_SEQ           AS docu_seq
                        , WD.CARD_ACQ           AS card_acq
                        , GET_CODE_NM('CARD_ACQ', WD.CARD_ACQ)      AS card_acq_nm
                        , VD.CARD_NO            AS card_no        
                        , WD.CARD_REG_NO        AS card_reg_no
                        , VD.CARD_TYPE          AS card_type
                        , GET_CODE_NM('CARD_TYPE', VD.CARD_TYPE)    AS card_type_nm
                        , WD.CONF_NO            AS conf_no
                        , WD.CONF_GB            AS conf_gb
                        , CASE WHEN WD.CONF_GB = 'A' THEN '승인' ELSE '취소' END AS conf_gb_nm
                        , WD.CONF_DTTM          AS conf_dttm
                        , WD.CONF_AMT           AS conf_amt
                        , WD.CARD_BUY_FLAG      AS card_buy_flag
                        , WD.CARD_BUY_DATE      AS card_buy_date
                        , WD.CARD_FEE_RATE      AS fard_fee_rate
                        , WD.CARD_FEE_AMT       AS card_fee_amt
                        , IFNULL(WD.CARD_RESV_AMT, 0)   AS card_resv_amt
                        , IFNULL(WD.CARD_RESV_DAY, 0)   AS card_resv_day
                        , IFNULL(WD.CARD_RESV_DATE, '') AS card_resv_date
                        , IFNULL(WD.SVC_FEE_RATE, 0)    AS svc_fee_rate
                        , IFNULL(WD.SVC_FEE_AMT, 0)     AS svc_fee_amt
                        , IFNULL(WD.WD_BASE_AMT, 0)     AS wd_base_amt
                        , IFNULL(WD.CRD_FEE_RATE, 0)    AS crd_fee_rate
                        , IFNULL(WD.CRD_FEE_AMT, 0)     AS crd_fee_amt
                        , IFNULL(WD.SUB_FLAG, 'N')      AS sub_flag
                        , IFNULL(WD.REMIT_AMT, 0)       AS remit_amt
                        , IFNULL(WD.REMIT_NO, '')       AS remit_seq
                        , IFNULL(WD.REMIT_DT, '')     AS remit_dt
                        , IFNULL(WD.DEPOSIT_FLAG, '')   AS deposit_flag
                        , IFNULL(WD.BANK_IN_DATE, '')   AS bank_in_date
                        , IFNULL(WD.CARDSALES_FG, '')   AS cardsales_fg
                        , WD.USE_YN                     AS use_yn
                        , IFNULL(WD.WD_MEMO, '')        AS wd_memo
                        , WD.CLOSE_YN                   AS close_yn
                        , DATE_FORMAT(IFNULL(WD.UPT_DTTM, WD.ENT_DTTM), '%Y-%m-%d %H:%i:%s')              AS upt_dttm
                        , DATE_FORMAT(IFNULL(WD.ENT_USER_ID,  WD.UPT_USER_ID), '%Y-%m-%d %H:%i:%s')       AS upt_user_id
                  FROM  TB_WITHDRAW WD
                        JOIN TB_VAN_DOCU VD ON VD.DOCU_SEQ = WD.DOCU_SEQ
                        JOIN TB_CHAIN   TC ON TC.CHAIN_NO = WD.CHAIN_NO 
                WHERE  1=1
                AND  WD.REMIT_NO    = #{sch_list_remit_no}
                
                <if test='sch_list_gb_val != ""'> 
                        <choose>
                                <when test='sch_list_gb == "sch_list_gb_conf_no"'>
                                        AND  WD.CONF_NO  = #{sch_list_gb_val}
                                </when> 
                                <when test='sch_list_gb == "sch_list_gb_card_no"'>
                                        AND  WD.CARD_NO  = #{sch_list_gb_val}
                                </when> 
                                <when test='sch_list_gb == "sch_list_gb_conf_amt"'>
                                        AND  WD.CONF_AMT  = #{sch_list_gb_val}
                                </when>  
                        </choose>                     
                </if>  
                <choose>
                        <when test='sidx != ""'>
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>
        <select id="getRemitSubRecvList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
                SELECT  SQL_CALC_FOUND_ROWS
                        SM.SUB_NO                                       AS sub_no
                        , SM.SUB_CODE                                   AS sub_code
                        , GET_CODE_NM ('SUB_CODE', SM.SUB_CODE) 	AS sub_code_nm
                        , SM.CHAIN_NO                                   AS chain_no
                        , SM.SUB_STATUS                                 AS sub_status
                        , GET_CODE_NM ('SUB_STATUS', SM.SUB_STATUS) 	AS sub_status_nm
                        , SM.OCCUR_AMT                                  AS occur_amt
                        , SM.OCCUR_BASE_AMT                             AS occur_base_amt
                        , SM.OCCUR_SVC_AMT                              AS occur_svc_amt
                        , SM.OCCUR_CRD_AMT                              AS occur_crd_amt
                        , IFNULL(SR.RECV_AMT, 0)		        AS recv_amt
                        , IFNULL(SR.RECV_BASE_AMT, 0)			AS recv_base_amt
                        , IFNULL(SR.RECV_SVC_AMT, 0)			AS recv_svc_amt
                        , IFNULL(SR.RECV_CRD_AMT, 0)			AS recv_crd_amt
                        , SM.REMAIN_AMT					AS remain_amt
                        , SM.REMAIN_BASE_AMT 				AS remain_base_amt
                        , SM.REMAIN_SVC_AMT				AS remain_svc_amt
                        , SM.REMAIN_CRD_AMT				AS remain_crd_amt
                        , SM.SUB_MEMO                                   AS sub_memo
                  FROM  TB_SUB_MST SM 
                        JOIN (
                                SELECT SUB_NO, REMIT_NO
                                                , SUM(RECV_AMT) 	AS RECV_AMT
                                                , SUM(RECV_BASE_AMT) AS RECV_BASE_AMT 
                                                , SUM(RECV_SVC_AMT)		AS RECV_SVC_AMT 
                                                , SUM(RECV_CRD_AMT)		AS RECV_CRD_AMT   
                                FROM 	TB_SUB_RECEIVE
                                WHERE 	REMIT_NO = #{sch_sub_recv_remit_no}
                                GROUP 	BY SUB_NO, REMIT_NO 
                        ) SR ON SR.SUB_NO = SM.SUB_NO 
                <choose>
                        <when test='sidx != ""'>
                                ORDER BY ${sidx} ${sord}
                        </when>
                        <otherwise>
                                ORDER BY 1
                        </otherwise>
                </choose>                
                LIMIT  ${start}, ${end}
        </select>       
        <update id="callProcRemitCancel" parameterType="com.web.manage.withdraw.domain.ProcRemitVO" statementType="CALLABLE">
                { 
                        CALL PRC_REMIT_CANCEL(
                                #{remitNo, mode=IN, jdbcType=VARCHAR} 
                                , #{userId, mode=IN, jdbcType=VARCHAR}
                                , #{resultCode, mode=OUT, jdbcType=INTEGER, javaType=java.lang.Integer}
                                , #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
                        ) 
                }
        </update>

        <update id="callProcRemitSend" parameterType="com.web.manage.withdraw.domain.ProcRemitVO" statementType="CALLABLE">
                { 
                        CALL PRC_REMIT_SEND(
                                #{remitNo, mode=IN, jdbcType=VARCHAR}
                                , #{userId, mode=IN, jdbcType=VARCHAR}
                                , #{resultCode, mode=OUT, jdbcType=INTEGER, javaType=java.lang.Integer}
                                , #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
                        ) 
                }
        </update>
</mapper>